{"version":3,"sources":["Iso-poly.js","App.js","index.js"],"names":["Chair","materials","nodes","useState","label","setLabel","onPointerEnter","onPointerLeave","material","Default_Color","geometry","Chair_1","Default_White","Chair_2","visible","Chair_Label_1","Chair_Label_2","Lamp","Hood_1","Hood_2","Lamp_Label_1","Lamp_Label_2","Soda","Can","Can_1","Soda_Label_1","Soda_Label_2","Blinds","Blinds_Label_1","Blinds_Label_2","Computer","Plane","Plane_1","Cube","Cube_1","Laptop_Label_1","Laptop_Label_2","Garbage","Bin_1","Bin_2","Garbage_Label_1","Garbage_Label_2","Room","Walls_Floor","Walls_Floor_1","Rug","Rug_1","Rug_2","Rug_Label_1","Rug_Label_2","Books","Book_02","Book_02_1","Book_01_1","Book_01_2","Books_Label_1","Books_Label_2","WallArt","Wall_Art_1","Wall_Art_2","Art_Label_1","Art_Label_2","Clock","cbody","cbody_1","Clock_Label_1","Clock_Label_2","Large_Hand","Small_Hand","Glasses","Sunglasses","Glasses_Label_1","Glasses_Label_2","TextHeaders","Hello","position","rotation","Math","PI","Im_Trevor","I_Create","Desk","Cylinder","Cylinder_1","Model","props","group","useRef","useGLTF","useThree","camera","viewport","useEffect","fov","lookAt","updateProjectionMatrix","ref","dispose","LoadOverlay","Html","center","className","App","pixelRatio","window","devicePixelRatio","OrbitControls","intensity","fallback","opacity","preload","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f4c43bcd.chunk.js","sourcesContent":["import React, { useEffect, useRef, useState } from 'react'\nimport { useGLTF } from '@react-three/drei/useGLTF'\nimport { useThree } from 'react-three-fiber'\n\nfunction Chair({ materials, nodes }) {\n  const [label, setLabel] = useState(false)\n  return (\n    <group\n      onPointerEnter={() => {\n        setLabel(true)\n      }}\n      onPointerLeave={() => {\n        setLabel(false)\n      }}\n    >\n      <mesh\n        material={materials.Default_Color}\n        geometry={nodes.Chair_1.geometry}\n      />\n      <mesh\n        material={materials.Default_White}\n        geometry={nodes.Chair_2.geometry}\n      />\n      <group visible={label}>\n        <mesh\n          material={materials.Default_Color}\n          geometry={nodes.Chair_Label_1.geometry}\n        />\n        <mesh\n          material={materials.Default_White}\n          geometry={nodes.Chair_Label_2.geometry}\n        />\n      </group>\n    </group>\n  )\n}\n\nfunction Lamp({ materials, nodes }) {\n  const [label, setLabel] = useState(false)\n  return (\n    <group\n      onPointerEnter={() => {\n        setLabel(true)\n      }}\n      onPointerLeave={() => {\n        setLabel(false)\n      }}\n    >\n      <mesh\n        material={materials.Default_Color}\n        geometry={nodes.Hood_1.geometry}\n      />\n      <mesh\n        material={materials.Default_White}\n        geometry={nodes.Hood_2.geometry}\n      />\n      <group visible={label}>\n        <mesh\n          material={materials.Default_Color}\n          geometry={nodes.Lamp_Label_1.geometry}\n        />\n        <mesh\n          material={materials.Default_White}\n          geometry={nodes.Lamp_Label_2.geometry}\n        />\n      </group>\n    </group>\n  )\n}\n\nfunction Soda({ materials, nodes }) {\n  const [label, setLabel] = useState(false)\n  return (\n    <group\n      onPointerEnter={() => {\n        setLabel(true)\n      }}\n      onPointerLeave={() => {\n        setLabel(false)\n      }}\n    >\n      <mesh material={materials.Default_White} geometry={nodes.Can.geometry} />\n      <mesh\n        material={materials.Default_Color}\n        geometry={nodes.Can_1.geometry}\n      />\n      <group visible={label}>\n        <mesh\n          material={materials.Default_Color}\n          geometry={nodes.Soda_Label_1.geometry}\n        />\n        <mesh\n          material={materials.Default_White}\n          geometry={nodes.Soda_Label_2.geometry}\n        />\n      </group>\n    </group>\n  )\n}\n\nfunction Blinds({ materials, nodes }) {\n  const [label, setLabel] = useState(false)\n  return (\n    <group\n      onPointerEnter={() => {\n        setLabel(true)\n      }}\n      onPointerLeave={() => {\n        setLabel(false)\n      }}\n    >\n      <mesh material={materials.Default_White} geometry={nodes.Blinds.geometry}>\n        <group visible={label}>\n          <mesh\n            material={materials.Default_Color}\n            geometry={nodes.Blinds_Label_1.geometry}\n          />\n          <mesh\n            material={materials.Default_White}\n            geometry={nodes.Blinds_Label_2.geometry}\n          />\n        </group>\n      </mesh>\n    </group>\n  )\n}\n\nfunction Computer({ materials, nodes }) {\n  const [label, setLabel] = useState(false)\n  return (\n    <group\n      onPointerEnter={() => {\n        setLabel(true)\n      }}\n      onPointerLeave={() => {\n        setLabel(false)\n      }}\n    >\n      <mesh\n        material={materials.Default_White}\n        geometry={nodes.Plane.geometry}\n      />\n      <mesh\n        material={materials.Default_Color}\n        geometry={nodes.Plane_1.geometry}\n      />\n      <group>\n        <mesh\n          material={materials.Default_White}\n          geometry={nodes.Cube.geometry}\n        />\n        <mesh\n          material={materials.Default_Color}\n          geometry={nodes.Cube_1.geometry}\n        />\n      </group>\n      <group visible={label}>\n        <mesh\n          material={materials.Default_Color}\n          geometry={nodes.Laptop_Label_1.geometry}\n        />\n        <mesh\n          material={materials.Default_White}\n          geometry={nodes.Laptop_Label_2.geometry}\n        />\n      </group>\n    </group>\n  )\n}\n\nfunction Garbage({ materials, nodes }) {\n  const [label, setLabel] = useState(false)\n  return (\n    <group\n      onPointerEnter={() => {\n        setLabel(true)\n      }}\n      onPointerLeave={() => {\n        setLabel(false)\n      }}\n    >\n      <mesh\n        material={materials.Default_Color}\n        geometry={nodes.Bin_1.geometry}\n      />\n      <mesh\n        material={materials.Default_White}\n        geometry={nodes.Bin_2.geometry}\n      />\n      <mesh\n        material={materials.Default_White}\n        geometry={nodes.Garbage.geometry}\n      />\n      <group visible={label}>\n        <mesh\n          material={materials.Default_Color}\n          geometry={nodes.Garbage_Label_1.geometry}\n        />\n        <mesh\n          material={materials.Default_White}\n          geometry={nodes.Garbage_Label_2.geometry}\n        />\n      </group>\n    </group>\n  )\n}\n\nfunction Room({ materials, nodes }) {\n  return (\n    <group>\n      <mesh\n        material={materials.Default_White}\n        geometry={nodes.Walls_Floor.geometry}\n      />\n      <mesh\n        material={materials.Default_Color}\n        geometry={nodes.Walls_Floor_1.geometry}\n      />\n    </group>\n  )\n}\n\nfunction Rug({ materials, nodes }) {\n  const [label, setLabel] = useState(false)\n  return (\n    <group\n      onPointerEnter={() => {\n        setLabel(true)\n      }}\n      onPointerLeave={() => {\n        setLabel(false)\n      }}\n    >\n      <mesh\n        material={materials.Default_Color}\n        geometry={nodes.Rug_1.geometry}\n      />\n      <mesh\n        material={materials.Default_White}\n        geometry={nodes.Rug_2.geometry}\n      />\n      <group visible={label}>\n        <mesh\n          material={materials.Default_Color}\n          geometry={nodes.Rug_Label_1.geometry}\n        />\n        <mesh\n          material={materials.Default_White}\n          geometry={nodes.Rug_Label_2.geometry}\n        />\n      </group>\n    </group>\n  )\n}\n\nfunction Books({ materials, nodes }) {\n  const [label, setLabel] = useState(false)\n  return (\n    <group\n      onPointerEnter={() => {\n        setLabel(true)\n      }}\n      onPointerLeave={() => {\n        setLabel(false)\n      }}\n    >\n      <mesh\n        material={materials.Default_Color}\n        geometry={nodes.Book_02.geometry}\n      />\n      <mesh\n        material={materials.Default_White}\n        geometry={nodes.Book_02_1.geometry}\n      />\n      <group>\n        <mesh\n          material={materials.Default_Color}\n          geometry={nodes.Book_01_1.geometry}\n        />\n        <mesh\n          material={materials.Default_White}\n          geometry={nodes.Book_01_2.geometry}\n        />\n      </group>\n      <group visible={label}>\n        <mesh\n          material={materials.Default_Color}\n          geometry={nodes.Books_Label_1.geometry}\n        />\n        <mesh\n          material={materials.Default_White}\n          geometry={nodes.Books_Label_2.geometry}\n        />\n      </group>\n    </group>\n  )\n}\n\nfunction WallArt({ materials, nodes }) {\n  const [label, setLabel] = useState(false)\n  return (\n    <group\n      onPointerEnter={() => {\n        setLabel(true)\n      }}\n      onPointerLeave={() => {\n        setLabel(false)\n      }}\n    >\n      <mesh\n        material={materials.Default_White}\n        geometry={nodes.Wall_Art_1.geometry}\n      />\n      <mesh\n        material={materials.Default_Color}\n        geometry={nodes.Wall_Art_2.geometry}\n      />\n      <group visible={label}>\n        <mesh\n          material={materials.Default_Color}\n          geometry={nodes.Art_Label_1.geometry}\n        />\n        <mesh\n          material={materials.Default_White}\n          geometry={nodes.Art_Label_2.geometry}\n        />\n      </group>\n    </group>\n  )\n}\n\nfunction Clock({ materials, nodes }) {\n  const [label, setLabel] = useState(false)\n  return (\n    <group\n      onPointerEnter={() => {\n        setLabel(true)\n      }}\n      onPointerLeave={() => {\n        setLabel(false)\n      }}\n    >\n      <mesh\n        material={materials.Default_Color}\n        geometry={nodes.cbody.geometry}\n      />\n      <mesh\n        material={materials.Default_White}\n        geometry={nodes.cbody_1.geometry}\n      />\n      <group visible={label}>\n        <mesh\n          material={materials.Default_Color}\n          geometry={nodes.Clock_Label_1.geometry}\n        />\n        <mesh\n          material={materials.Default_White}\n          geometry={nodes.Clock_Label_2.geometry}\n        />\n      </group>\n      <mesh\n        material={materials.Default_Color}\n        geometry={nodes.Large_Hand.geometry}\n      />\n      <mesh\n        material={materials.Default_Color}\n        geometry={nodes.Small_Hand.geometry}\n      />\n    </group>\n  )\n}\n\nfunction Glasses({ materials, nodes }) {\n  const [label, setLabel] = useState(false)\n  return (\n    <group\n      onPointerEnter={() => {\n        setLabel(true)\n      }}\n      onPointerLeave={() => {\n        setLabel(false)\n      }}\n    >\n      <mesh\n        material={materials.Default_White}\n        geometry={nodes.Sunglasses.geometry}\n      >\n        <group visible={label}>\n          <mesh\n            material={materials.Default_Color}\n            geometry={nodes.Glasses_Label_1.geometry}\n          />\n          <mesh\n            material={materials.Default_White}\n            geometry={nodes.Glasses_Label_2.geometry}\n          />\n        </group>\n      </mesh>\n    </group>\n  )\n}\n\nfunction TextHeaders({ materials, nodes }) {\n  return (\n    <group>\n      <mesh\n        material={materials.Default_Color}\n        geometry={nodes.Hello.geometry}\n        position={[-0.83, 1.18, 0.73]}\n        rotation={[Math.PI / 2, 0, -Math.PI / 2]}\n      />\n      <mesh\n        material={materials.Default_Color}\n        geometry={nodes.Im_Trevor.geometry}\n        position={[-0.83, 0.95, 0.14]}\n        rotation={[Math.PI / 2, 0, -Math.PI / 2]}\n      />\n      <mesh\n        material={materials.Default_Color}\n        geometry={nodes.I_Create.geometry}\n        position={[-0.83, 0.87, 0.14]}\n        rotation={[Math.PI / 2, 0, -Math.PI / 2]}\n      />\n    </group>\n  )\n}\n\nfunction Desk({ materials, nodes }) {\n  return (\n    <group>\n      <mesh\n        material={materials.Default_White}\n        geometry={nodes.Cylinder.geometry}\n      />\n      <mesh\n        material={materials.Default_Color}\n        geometry={nodes.Cylinder_1.geometry}\n      />\n    </group>\n  )\n}\n\nexport default function Model(props) {\n  const group = useRef()\n  const { nodes, materials } = useGLTF('/portfolio/models/iso-poly.gltf')\n\n  const { camera, viewport } = useThree()\n\n  useEffect(() => {\n    camera.fov = 21\n    camera.lookAt(0, 0, 0)\n    camera.updateProjectionMatrix()\n  })\n\n  return (\n    <group\n      ref={group}\n      dispose={null}\n      position={[0, -0.73, 0]}\n      rotation={[0, -0.8, 0]}\n    >\n      <TextHeaders nodes={nodes} materials={materials} />\n      <Room nodes={nodes} materials={materials} />\n      <Chair nodes={nodes} materials={materials} />\n      <Lamp nodes={nodes} materials={materials} />\n      <Soda nodes={nodes} materials={materials} />\n      <Blinds nodes={nodes} materials={materials} />\n      <Computer nodes={nodes} materials={materials} />\n      <Garbage nodes={nodes} materials={materials} />\n      <Rug nodes={nodes} materials={materials} />\n      <Books nodes={nodes} materials={materials} />\n      <WallArt nodes={nodes} materials={materials} />\n      <Clock nodes={nodes} materials={materials} />\n      <Glasses nodes={nodes} materials={materials} />\n      <Desk nodes={nodes} materials={materials} />\n    </group>\n  )\n}\n\nuseGLTF.preload('/iso-poly.gltf')\n","import React, { useRef, Suspense, useEffect, useLayoutEffect } from 'react'\r\nimport { Html, OrbitControls } from '@react-three/drei'\r\nimport { EffectComposer, Noise, Outline } from 'react-postprocessing'\r\nimport { Canvas } from 'react-three-fiber'\r\nimport Model from './Iso-poly'\r\n\r\n// import './App.css'\r\n\r\nfunction LoadOverlay() {\r\n  return (\r\n    <Html center>\r\n      <div className=\"loader-2\">Finishing up...</div>\r\n    </Html>\r\n  )\r\n}\r\n\r\nexport default function App() {\r\n  return (\r\n    <Canvas\r\n      pixelRatio={window.devicePixelRatio}\r\n      camera={{ position: [0, 2, 4] }}\r\n    >\r\n      <OrbitControls />\r\n      <ambientLight intensity={0.9} />\r\n      <directionalLight intensity={0.5} />\r\n      <Suspense fallback={<LoadOverlay />}>\r\n        <Model />\r\n      </Suspense>\r\n      <EffectComposer>\r\n        <Noise opacity={0.03} />\r\n      </EffectComposer>\r\n    </Canvas>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\n\r\nimport App from './App'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))\r\n"],"sourceRoot":""}