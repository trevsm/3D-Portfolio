{"version":3,"sources":["Iso-poly.js","App.js","index.js"],"names":["defaultConfig","mass","tension","friction","precision","Chair","materials","nodes","setItems","useState","label","setLabel","active","setActive","sProps","useSpring","pos","config","Overlay","className","useEffect","document","body","style","cursor","group","position","onPointerEnter","onPointerLeave","onClick","material","Default_Color","geometry","Default_White","Chair_1","visible","Chair_Label_1","Chair_Label_2","Chair_Text","rotation","Math","PI","Chair_CTV","Lamp","endPos","rot","Hood_1","Hood_2","Lamp_Label_1","Lamp_Label_2","Lamp_Text","Lamp_CTV","Soda","setTimeout","Can","Can_1","Soda_Label_1","Soda_Label_2","Soda_Text","Soda_CTV","Blinds","Material","Blinds_HitBox","Blinds_Label_1","Blinds_Label_2","Blinds_Text","Blinds_CTV","Computer","Computer_1","Computer_2","Cube","Cube_1","Lid_1","Lid_2","Hinge","Laptop_Label_1","Laptop_Label_2","Laptop_Text","Laptop_CTV","Garbage","Bin_1","Bin_2","Garbage_Label_1","Garbage_Label_2","Garbage_Text","Garbage_CTV","Room","Walls_Floor","Walls_Floor_1","Rug","Rug_1","Rug_2","Books","Book_02","Book_02_1","Book_01_1","Book_01_2","Books_Label_1","Books_Label_2","Books_Text","Books_CTV","WallArt","Art_HitBox","Wall_Art_1","Wall_Art_2","Art_Label_1","Art_Label_2","Art_Text","Art_CTV","Clock","hourHand","useRef","minHand","useFrame","clock","current","z","floor","elapsedTime","cbody","cbody_1","ref","Large_Hand","Small_Hand","Clock_Label_1","Clock_Label_2","Clock_Text","Clock_CTV","Glasses","Glasses_HitBox","Glasses_1","Glasses_2","Glasses_Label_1","Glasses_Label_2","Glasses_Text","Glasses_CTV","TextHeaders","pX","pos0","pos1","pos2","pos3","mesh","Hello","Im_Trevor","I_Create","Look_Around","scale","Desk","Desk_1","Desk_2","Model","useGLTF","dispose","preload","Loader","Html","center","props","overlayOpen","setOverlayOpen","children","CustomCamera","useThree","camera","viewport","fov","lookAt","updateProjectionMatrix","App","overlayItems","pixelRatio","window","devicePixelRatio","intensity","fallback","items","opacity","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.b68f5adf.chunk.js","sourcesContent":["import React, { useEffect, useRef, useState } from 'react'\nimport { useGLTF } from '@react-three/drei/useGLTF'\nimport { useFrame } from 'react-three-fiber'\n\nimport { useSpring } from '@react-spring/core'\nimport { a } from '@react-spring/three'\n\nconst defaultConfig = {\n  mass: 5,\n  tension: 400,\n  friction: 150,\n  precision: 0.0001,\n}\n\nfunction Chair({ materials, nodes, setItems }) {\n  const [label, setLabel] = useState(false)\n  const [active, setActive] = useState(false)\n\n  const sProps = useSpring({\n    pos: active ? [0, 0, 0] : [1, 0, 0],\n    config: defaultConfig,\n  })\n\n  const Overlay = (\n    <div>\n      <h1 className=\"title\">Chair</h1>\n    </div>\n  )\n\n  useEffect(() => {\n    setActive(true)\n  }, [])\n\n  useEffect(() => {\n    document.body.style.cursor = label ? 'pointer' : 'auto'\n  }, [label])\n\n  return (\n    <a.group position={sProps.pos}>\n      <group\n        onPointerEnter={() => {\n          setLabel(true)\n        }}\n        onPointerLeave={() => {\n          setLabel(false)\n        }}\n        onClick={() => {\n          setItems(Overlay)\n        }}\n      >\n        <mesh\n          material={materials.Default_Color}\n          geometry={nodes.Chair.geometry}\n        />\n        <mesh\n          material={materials.Default_White}\n          geometry={nodes.Chair_1.geometry}\n        />\n      </group>\n      <group visible={label}>\n        <mesh\n          material={materials.Default_Color}\n          geometry={nodes.Chair_Label_1.geometry}\n        />\n        <mesh\n          material={materials.Default_White}\n          geometry={nodes.Chair_Label_2.geometry}\n        />\n        <mesh\n          material={materials.Default_Color}\n          geometry={nodes.Chair_Text.geometry}\n          position={[-0.06, 0.83, 0.14]}\n          rotation={[Math.PI / 2, 0, -Math.PI / 2]}\n        >\n          <mesh\n            material={materials.Default_Color}\n            geometry={nodes.Chair_CTV.geometry}\n            position={[0, 0, 0.04]}\n          />\n        </mesh>\n      </group>\n    </a.group>\n  )\n}\n\nfunction Lamp({ materials, nodes, setItems }) {\n  const [label, setLabel] = useState(false)\n  const [active, setActive] = useState(false)\n\n  const endPos = [-0.71, 0.66, 0.22]\n\n  const sProps = useSpring({\n    pos: active ? endPos : [endPos[0], endPos[1] + 1, endPos[2]],\n    rot: active ? [0, 0, 0] : [0, Math.PI, 0],\n    config: defaultConfig,\n  })\n\n  const Overlay = (\n    <div>\n      <h1 className=\"title\">Lamp</h1>\n    </div>\n  )\n\n  useEffect(() => {\n    setActive(true)\n  }, [])\n\n  useEffect(() => {\n    document.body.style.cursor = label ? 'pointer' : 'auto'\n  }, [label])\n\n  return (\n    <a.group position={sProps.pos} rotation={sProps.rot}>\n      <group\n        onPointerEnter={() => {\n          setLabel(true)\n        }}\n        onPointerLeave={() => {\n          setLabel(false)\n        }}\n        onClick={() => {\n          setItems(Overlay)\n        }}\n      >\n        <mesh\n          material={materials.Default_Color}\n          geometry={nodes.Hood_1.geometry}\n        />\n        <mesh\n          material={materials.Default_White}\n          geometry={nodes.Hood_2.geometry}\n        />\n      </group>\n      <group visible={label} position={[0.71, -0.66, -0.22]}>\n        <mesh\n          material={materials.Default_Color}\n          geometry={nodes.Lamp_Label_1.geometry}\n        />\n        <mesh\n          material={materials.Default_White}\n          geometry={nodes.Lamp_Label_2.geometry}\n        />\n        <mesh\n          material={materials.Default_Color}\n          geometry={nodes.Lamp_Text.geometry}\n          position={[-0.68, 0.88, 0.1]}\n          rotation={[Math.PI / 2, 0, -Math.PI / 2]}\n        >\n          <mesh\n            material={materials.Default_Color}\n            geometry={nodes.Lamp_CTV.geometry}\n            position={[-0.01, 0, 0.04]}\n          />\n        </mesh>\n      </group>\n    </a.group>\n  )\n}\n\nfunction Soda({ materials, nodes, setItems }) {\n  const [label, setLabel] = useState(false)\n  const [active, setActive] = useState(false)\n\n  const sProps = useSpring({\n    pos: active ? [0, 0, 0] : [0, 1, 0],\n    config: defaultConfig,\n  })\n\n  const Overlay = (\n    <div>\n      <h1 className=\"title\">Soda</h1>\n    </div>\n  )\n\n  useEffect(() => {\n    setTimeout(() => {\n      setActive(true)\n    }, 200)\n  }, [])\n\n  useEffect(() => {\n    document.body.style.cursor = label ? 'pointer' : 'auto'\n  }, [label])\n\n  return (\n    <a.group position={sProps.pos}>\n      <group\n        onPointerEnter={() => {\n          setLabel(true)\n        }}\n        onPointerLeave={() => {\n          setLabel(false)\n        }}\n        onClick={() => {\n          setItems(Overlay)\n        }}\n      >\n        <mesh\n          material={materials.Default_White}\n          geometry={nodes.Can.geometry}\n        />\n        <mesh\n          material={materials.Default_Color}\n          geometry={nodes.Can_1.geometry}\n        />\n      </group>\n      <group visible={label}>\n        <mesh\n          material={materials.Default_Color}\n          geometry={nodes.Soda_Label_1.geometry}\n        />\n        <mesh\n          material={materials.Default_White}\n          geometry={nodes.Soda_Label_2.geometry}\n        />\n        <mesh\n          material={materials.Default_Color}\n          geometry={nodes.Soda_Text.geometry}\n          position={[-0.59, 0.75, -0.52]}\n          rotation={[Math.PI / 2, 0, -Math.PI / 2]}\n        >\n          <mesh\n            material={materials.Default_Color}\n            geometry={nodes.Soda_CTV.geometry}\n            position={[-0.01, 0, 0.04]}\n          />\n        </mesh>\n      </group>\n    </a.group>\n  )\n}\n\nfunction Blinds({ materials, nodes, setItems }) {\n  const [label, setLabel] = useState(false)\n\n  useEffect(() => {\n    document.body.style.cursor = label ? 'pointer' : 'auto'\n  }, [label])\n\n  const Overlay = (\n    <div>\n      <h1 className=\"title\">Window</h1>\n    </div>\n  )\n\n  return (\n    <group>\n      <mesh\n        visible={false}\n        onPointerEnter={() => {\n          setLabel(true)\n        }}\n        onPointerLeave={() => {\n          setLabel(false)\n        }}\n        onClick={() => {\n          setItems(Overlay)\n        }}\n        material={materials.Material}\n        geometry={nodes.Blinds_HitBox.geometry}\n      />\n      <mesh\n        material={materials.Default_White}\n        geometry={nodes.Blinds.geometry}\n      />\n      <group visible={label}>\n        <mesh\n          material={materials.Default_Color}\n          geometry={nodes.Blinds_Label_1.geometry}\n        />\n        <mesh\n          material={materials.Default_White}\n          geometry={nodes.Blinds_Label_2.geometry}\n        />\n        <mesh\n          material={materials.Default_Color}\n          geometry={nodes.Blinds_Text.geometry}\n          position={[-0.54, 1.02, -0.9]}\n          rotation={[Math.PI / 2, 0, 0]}\n        >\n          <mesh\n            material={materials.Default_Color}\n            geometry={nodes.Blinds_CTV.geometry}\n            position={[0.01, 0, 0.04]}\n          />\n        </mesh>\n      </group>\n    </group>\n  )\n}\n\nfunction Computer({ materials, nodes, setItems }) {\n  const [label, setLabel] = useState(false)\n  const [active, setActive] = useState(false)\n\n  const sProps = useSpring({\n    rot: active ? [0, 0, 0] : [0, 0, -1.8],\n    config: defaultConfig,\n  })\n\n  const Overlay = (\n    <div>\n      <h1 className=\"title\">Projects</h1>\n    </div>\n  )\n\n  useEffect(() => {\n    setTimeout(() => {\n      setActive(true)\n    }, 1000)\n  }, [])\n\n  useEffect(() => {\n    document.body.style.cursor = label ? 'pointer' : 'auto'\n  }, [label])\n\n  return (\n    <group>\n      <group\n        onPointerEnter={() => {\n          setLabel(true)\n        }}\n        onPointerLeave={() => {\n          setLabel(false)\n        }}\n        onClick={() => {\n          setItems(Overlay)\n        }}\n      >\n        <mesh\n          material={materials.Default_White}\n          geometry={nodes.Computer_1.geometry}\n        />\n        <mesh\n          material={materials.Default_Color}\n          geometry={nodes.Computer_2.geometry}\n        />\n        <mesh\n          material={materials.Default_White}\n          geometry={nodes.Cube.geometry}\n        />\n        <mesh\n          material={materials.Default_Color}\n          geometry={nodes.Cube_1.geometry}\n        />\n        <a.group position={[-0.713, 0.545, -0.14]} rotation={sProps.rot}>\n          <mesh\n            material={materials.Default_White}\n            geometry={nodes.Lid_1.geometry}\n          />\n          <mesh\n            material={materials.Default_Color}\n            geometry={nodes.Lid_2.geometry}\n          />\n        </a.group>\n        <mesh material={nodes.Hinge.material} geometry={nodes.Hinge.geometry} />\n      </group>\n\n      <group visible={label}>\n        <mesh\n          material={materials.Default_Color}\n          geometry={nodes.Laptop_Label_1.geometry}\n        />\n        <mesh\n          material={materials.Default_White}\n          geometry={nodes.Laptop_Label_2.geometry}\n        />\n        <mesh\n          material={materials.Default_Color}\n          geometry={nodes.Laptop_Text.geometry}\n          position={[-0.64, 0.73, -0.19]}\n          rotation={[Math.PI / 2, 0, -Math.PI / 2]}\n        >\n          <mesh\n            material={materials.Default_Color}\n            geometry={nodes.Laptop_CTV.geometry}\n            position={[0.01, 0, 0.04]}\n          />\n        </mesh>\n      </group>\n    </group>\n  )\n}\n\nfunction Garbage({ materials, nodes, setItems }) {\n  const [label, setLabel] = useState(false)\n\n  useEffect(() => {\n    document.body.style.cursor = label ? 'pointer' : 'auto'\n  }, [label])\n\n  const Overlay = (\n    <div>\n      <h1 className=\"title\">Garbage</h1>\n    </div>\n  )\n\n  return (\n    <group>\n      <group\n        onPointerEnter={() => {\n          setLabel(true)\n        }}\n        onPointerLeave={() => {\n          setLabel(false)\n        }}\n        onClick={() => {\n          setItems(Overlay)\n        }}\n      >\n        <mesh\n          material={materials.Default_Color}\n          geometry={nodes.Bin_1.geometry}\n        />\n        <mesh\n          material={materials.Default_White}\n          geometry={nodes.Bin_2.geometry}\n        />\n        <mesh\n          material={materials.Default_White}\n          geometry={nodes.Garbage.geometry}\n        />\n      </group>\n      <group visible={label}>\n        <mesh\n          material={materials.Default_Color}\n          geometry={nodes.Garbage_Label_1.geometry}\n        />\n        <mesh\n          material={materials.Default_White}\n          geometry={nodes.Garbage_Label_2.geometry}\n        />\n        <mesh\n          material={materials.Default_Color}\n          geometry={nodes.Garbage_Text.geometry}\n          position={[-0.59, 0.44, 0.67]}\n          rotation={[Math.PI / 2, 0, -Math.PI / 2]}\n        >\n          <mesh\n            material={materials.Default_Color}\n            geometry={nodes.Garbage_CTV.geometry}\n            position={[0.02, 0, 0.04]}\n          />\n        </mesh>\n      </group>\n    </group>\n  )\n}\n\nfunction Room({ materials, nodes }) {\n  return (\n    <group>\n      <mesh\n        material={materials.Default_White}\n        geometry={nodes.Walls_Floor.geometry}\n      />\n      <mesh\n        material={materials.Default_Color}\n        geometry={nodes.Walls_Floor_1.geometry}\n      />\n    </group>\n  )\n}\n\nfunction Rug({ materials, nodes }) {\n  return (\n    <group>\n      <mesh\n        material={materials.Default_Color}\n        geometry={nodes.Rug_1.geometry}\n      />\n      <mesh\n        material={materials.Default_White}\n        geometry={nodes.Rug_2.geometry}\n      />\n    </group>\n  )\n}\n\nfunction Books({ materials, nodes, setItems }) {\n  const [label, setLabel] = useState(false)\n  const [active, setActive] = useState(false)\n\n  const sProps = useSpring({\n    pos: active ? [0, 0, 0] : [0, 1, 0],\n    config: defaultConfig,\n  })\n\n  const Overlay = (\n    <div>\n      <h1 className=\"title\">Education</h1>\n    </div>\n  )\n\n  useEffect(() => {\n    setTimeout(() => {\n      setActive(true)\n    }, 300)\n  }, [])\n\n  useEffect(() => {\n    document.body.style.cursor = label ? 'pointer' : 'auto'\n  }, [label])\n\n  return (\n    <a.group position={sProps.pos}>\n      <group\n        onPointerEnter={() => {\n          setLabel(true)\n        }}\n        onPointerLeave={() => {\n          setLabel(false)\n        }}\n        onClick={() => {\n          setItems(Overlay)\n        }}\n      >\n        <mesh\n          material={materials.Default_Color}\n          geometry={nodes.Book_02.geometry}\n        />\n        <mesh\n          material={materials.Default_White}\n          geometry={nodes.Book_02_1.geometry}\n        />\n        <mesh\n          material={materials.Default_Color}\n          geometry={nodes.Book_01_1.geometry}\n        />\n        <mesh\n          material={materials.Default_White}\n          geometry={nodes.Book_01_2.geometry}\n        />\n      </group>\n      <group visible={label}>\n        <mesh\n          material={materials.Default_Color}\n          geometry={nodes.Books_Label_1.geometry}\n        />\n        <mesh\n          material={materials.Default_White}\n          geometry={nodes.Books_Label_2.geometry}\n        />\n        <mesh\n          material={materials.Default_Color}\n          geometry={nodes.Books_Text.geometry}\n          position={[-0.81, 0.71, -0.59]}\n          rotation={[Math.PI / 2, 0, -Math.PI / 2]}\n        >\n          <mesh\n            material={materials.Default_Color}\n            geometry={nodes.Books_CTV.geometry}\n            position={[0.03, 0, 0.04]}\n          />\n        </mesh>\n      </group>\n    </a.group>\n  )\n}\n\nfunction WallArt({ materials, nodes, setItems }) {\n  const [label, setLabel] = useState(false)\n\n  useEffect(() => {\n    document.body.style.cursor = label ? 'pointer' : 'auto'\n  }, [label])\n\n  const Overlay = (\n    <div>\n      <h1 className=\"title\">Music</h1>\n    </div>\n  )\n\n  return (\n    <group>\n      <mesh\n        visible={false}\n        material={materials.Material}\n        geometry={nodes.Art_HitBox.geometry}\n        onPointerEnter={() => {\n          setLabel(true)\n        }}\n        onPointerLeave={() => {\n          setLabel(false)\n        }}\n        onClick={() => {\n          setItems(Overlay)\n        }}\n      />\n      <mesh\n        material={materials.Default_White}\n        geometry={nodes.Wall_Art_1.geometry}\n      />\n      <mesh\n        material={materials.Default_Color}\n        geometry={nodes.Wall_Art_2.geometry}\n      />\n      <group visible={label}>\n        <mesh\n          material={materials.Default_Color}\n          geometry={nodes.Art_Label_1.geometry}\n        />\n        <mesh\n          material={materials.Default_White}\n          geometry={nodes.Art_Label_2.geometry}\n        />\n        <mesh\n          material={materials.Default_Color}\n          geometry={nodes.Art_Text.geometry}\n          position={[-0.77, 0.58, 0.84]}\n          rotation={[Math.PI / 2, 0, -Math.PI / 2]}\n        >\n          <mesh\n            material={materials.Default_Color}\n            geometry={nodes.Art_CTV.geometry}\n            position={[0.02, 0, 0.04]}\n          />\n        </mesh>\n      </group>\n    </group>\n  )\n}\n\nfunction Clock({ materials, nodes, setItems }) {\n  const [label, setLabel] = useState(false)\n  const hourHand = useRef()\n  const minHand = useRef()\n\n  useEffect(() => {\n    document.body.style.cursor = label ? 'pointer' : 'auto'\n  }, [label])\n\n  const Overlay = (\n    <div>\n      <h1 className=\"title\">Time</h1>\n    </div>\n  )\n\n  useFrame(({ clock }) => {\n    minHand.current.rotation.z = Math.floor(-clock.elapsedTime) / 10\n    hourHand.current.rotation.z = minHand.current.rotation.z / 10\n  })\n\n  return (\n    <group>\n      <group\n        onPointerEnter={() => {\n          setLabel(true)\n        }}\n        onPointerLeave={() => {\n          setLabel(false)\n        }}\n        onClick={() => {\n          setItems(Overlay)\n        }}\n      >\n        <mesh\n          material={materials.Default_Color}\n          geometry={nodes.cbody.geometry}\n        />\n        <mesh\n          material={materials.Default_White}\n          geometry={nodes.cbody_1.geometry}\n        />\n        <mesh\n          ref={minHand}\n          material={materials.Default_Color}\n          geometry={nodes.Large_Hand.geometry}\n          position={[0.45, 1.12158, -0.9]}\n        />\n        <mesh\n          ref={hourHand}\n          material={materials.Default_Color}\n          geometry={nodes.Small_Hand.geometry}\n          position={[0.45, 1.12151, -0.9]}\n        />\n      </group>\n      <group visible={label}>\n        <mesh\n          material={materials.Default_Color}\n          geometry={nodes.Clock_Label_1.geometry}\n        />\n        <mesh\n          material={materials.Default_White}\n          geometry={nodes.Clock_Label_2.geometry}\n        />\n        <mesh\n          material={materials.Default_Color}\n          geometry={nodes.Clock_Text.geometry}\n          position={[0.59, 1.35, -0.9]}\n          rotation={[Math.PI / 2, 0, 0]}\n        >\n          <mesh\n            material={materials.Default_Color}\n            geometry={nodes.Clock_CTV.geometry}\n            position={[-0.01, 0, 0.04]}\n          />\n        </mesh>\n      </group>\n    </group>\n  )\n}\n\nfunction Glasses({ materials, nodes, setItems }) {\n  const [label, setLabel] = useState(false)\n  const [active, setActive] = useState(false)\n\n  const sProps = useSpring({\n    pos: active ? [0, 0, 0] : [0, 1, 0],\n    config: defaultConfig,\n  })\n\n  const Overlay = (\n    <div>\n      <h1 className=\"title\">Glasses</h1>\n    </div>\n  )\n\n  useEffect(() => {\n    setTimeout(() => {\n      setActive(true)\n    }, 100)\n  }, [])\n\n  useEffect(() => {\n    document.body.style.cursor = label ? 'pointer' : 'auto'\n  }, [label])\n\n  return (\n    <a.group position={sProps.pos}>\n      <mesh\n        visible={false}\n        material={materials.Material}\n        geometry={nodes.Glasses_HitBox.geometry}\n        onPointerEnter={() => {\n          setLabel(true)\n        }}\n        onPointerLeave={() => {\n          setLabel(false)\n        }}\n        onClick={() => {\n          setItems(Overlay)\n        }}\n      />\n      <mesh\n        material={materials.Default_White}\n        geometry={nodes.Glasses_1.geometry}\n      />\n      <mesh\n        material={materials.Default_Color}\n        geometry={nodes.Glasses_2.geometry}\n      />\n      <group visible={label}>\n        <mesh\n          material={materials.Default_Color}\n          geometry={nodes.Glasses_Label_1.geometry}\n        />\n        <mesh\n          material={materials.Default_White}\n          geometry={nodes.Glasses_Label_2.geometry}\n        />\n        <mesh\n          material={materials.Default_Color}\n          geometry={nodes.Glasses_Text.geometry}\n          position={[-0.72, 0.69, -0.42]}\n          rotation={[Math.PI / 2, 0, -Math.PI / 2]}\n        >\n          <mesh\n            material={materials.Default_Color}\n            geometry={nodes.Glasses_CTV.geometry}\n            position={[0.01, 0, 0.04]}\n          />\n        </mesh>\n      </group>\n    </a.group>\n  )\n}\n\nfunction TextHeaders({ materials, nodes }) {\n  const [active, setActive] = useState(false)\n\n  const pX = [\n    [-0.83, 1.18, 0.73],\n    [-0.83, 0.95, 0.14],\n    [-0.83, 0.87, 0.14],\n    [0.21, 0.41, -0.9],\n  ]\n\n  const sProps = useSpring({\n    pos0: active ? pX[0] : [pX[0][0] - 0.1, pX[0][1], pX[0][2]],\n    pos1: active ? pX[1] : [pX[1][0] - 1, pX[1][1], pX[1][2]],\n    pos2: active ? pX[2] : [pX[2][0] - 2, pX[2][1], pX[2][2]],\n    pos3: active ? pX[3] : [pX[3][0], pX[3][1], pX[3][2] - 10],\n    config: { mass: 20, tension: 400, friction: 200, precision: 0.0001 },\n  })\n\n  useEffect(() => {\n    setActive(true)\n  }, [])\n\n  return (\n    <group>\n      <a.mesh\n        material={materials.Default_Color}\n        geometry={nodes.Hello.geometry}\n        position={sProps.pos0}\n        rotation={[Math.PI / 2, 0, -Math.PI / 2]}\n      />\n      <a.mesh\n        material={materials.Default_Color}\n        geometry={nodes.Im_Trevor.geometry}\n        position={sProps.pos1}\n        rotation={[Math.PI / 2, 0, -Math.PI / 2]}\n      />\n      <a.mesh\n        material={materials.Default_Color}\n        geometry={nodes.I_Create.geometry}\n        position={sProps.pos2}\n        rotation={[Math.PI / 2, 0, -Math.PI / 2]}\n      />\n      <a.mesh\n        material={materials.Default_Color}\n        geometry={nodes.Look_Around.geometry}\n        position={sProps.pos3}\n        rotation={[Math.PI / 2, 0, 0]}\n        scale={[0.87, 0.87, 0.87]}\n      />\n    </group>\n  )\n}\n\nfunction Desk({ materials, nodes }) {\n  return (\n    <group>\n      <mesh\n        material={materials.Default_White}\n        geometry={nodes.Desk_1.geometry}\n      />\n      <mesh\n        material={materials.Default_Color}\n        geometry={nodes.Desk_2.geometry}\n      />\n    </group>\n  )\n}\n\nexport default function Model({ setItems }) {\n  const group = useRef()\n  const { nodes, materials } = useGLTF('/portfolio/models/iso-poly.gltf')\n\n  return (\n    <group\n      ref={group}\n      dispose={null}\n      position={[0, -0.76, 0]}\n      rotation={[0, -0.8, 0]}\n    >\n      <TextHeaders nodes={nodes} materials={materials} />\n      <Room nodes={nodes} materials={materials} />\n      <Rug nodes={nodes} materials={materials} />\n      <Desk nodes={nodes} materials={materials} />\n      <Chair nodes={nodes} materials={materials} setItems={setItems} />\n      <Lamp nodes={nodes} materials={materials} setItems={setItems} />\n      <Clock nodes={nodes} materials={materials} setItems={setItems} />\n      <Blinds nodes={nodes} materials={materials} setItems={setItems} />\n      <Computer nodes={nodes} materials={materials} setItems={setItems} />\n      <Garbage nodes={nodes} materials={materials} setItems={setItems} />\n      <WallArt nodes={nodes} materials={materials} setItems={setItems} />\n      <Soda nodes={nodes} materials={materials} setItems={setItems} />\n      <Books nodes={nodes} materials={materials} setItems={setItems} />\n      <Glasses nodes={nodes} materials={materials} setItems={setItems} />\n    </group>\n  )\n}\n\nuseGLTF.preload('/portfolio/models/iso-poly.gltf')\n","import React, { Suspense, useRef, useState, useEffect } from 'react'\r\nimport { Html, OrbitControls } from '@react-three/drei'\r\nimport { EffectComposer, Noise } from 'react-postprocessing'\r\nimport { Canvas, useThree } from 'react-three-fiber'\r\nimport Model from './Iso-poly'\r\n\r\nimport './App.css'\r\n\r\nfunction Loader() {\r\n  return (\r\n    <Html center>\r\n      <div className=\"loader-2\">Finishing up...</div>\r\n    </Html>\r\n  )\r\n}\r\n\r\nfunction Overlay(props) {\r\n  function closeOverlay() {\r\n    props.setOverlayOpen(false)\r\n  }\r\n  return (\r\n    <>\r\n      {props.overlayOpen ? (\r\n        <div className=\"overlay\">\r\n          <div className=\"closeBtn\" onClick={closeOverlay}>\r\n            x\r\n          </div>\r\n          <div className=\"content\">{props.children}</div>\r\n        </div>\r\n      ) : null}\r\n    </>\r\n  )\r\n}\r\n\r\nfunction CustomCamera() {\r\n  const { camera, viewport } = useThree()\r\n\r\n  useEffect(() => {\r\n    camera.fov = 23\r\n    camera.lookAt(0, 0, 0)\r\n    camera.updateProjectionMatrix()\r\n  })\r\n  return null\r\n}\r\n\r\nexport default function App() {\r\n  const [overlayOpen, setOverlayOpen] = useState(false)\r\n  const overlayItems = useRef([])\r\n\r\n  const setItems = (items) => {\r\n    overlayItems.current = items\r\n    setOverlayOpen(true)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Canvas\r\n        pixelRatio={window.devicePixelRatio}\r\n        camera={{ position: [0, 2, 4] }}\r\n      >\r\n        {/* <OrbitControls /> */}\r\n        <ambientLight intensity={0.9} />\r\n        <directionalLight intensity={0.5} />\r\n        <Suspense fallback={<Loader />}>\r\n          <Model setItems={setItems} />\r\n        </Suspense>\r\n        <EffectComposer>\r\n          <Noise opacity={0.03} />\r\n        </EffectComposer>\r\n        <CustomCamera />\r\n      </Canvas>\r\n      <Overlay overlayOpen={overlayOpen} setOverlayOpen={setOverlayOpen}>\r\n        {overlayItems.current}\r\n      </Overlay>\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\n\r\nimport App from './App'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))\r\n"],"sourceRoot":""}