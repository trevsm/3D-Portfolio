{"version":3,"sources":["Iso-poly.js","App.js","index.js"],"names":["Chair","materials","nodes","setItems","useState","label","setLabel","useEffect","document","body","style","cursor","Overlay","className","onPointerEnter","onPointerLeave","onClick","material","Default_Color","geometry","Default_White","Chair_1","visible","Chair_Label_1","Chair_Label_2","Chair_Text","position","rotation","Math","PI","Chair_CTV","Lamp","Hood_1","Hood_2","Lamp_Label_1","Lamp_Label_2","Lamp_Text","Lamp_CTV","Soda","Can","Can_1","Soda_Label_1","Soda_Label_2","Soda_Text","Soda_CTV","Blinds","Material","Blinds_HitBox","Blinds_Label_1","Blinds_Label_2","Blinds_Text","Blinds_CTV","Computer","Computer_1","Computer_2","Cube","Cube_1","Laptop_Label_1","Laptop_Label_2","Laptop_Text","Laptop_CTV","Garbage","Bin_1","Bin_2","Garbage_Label_1","Garbage_Label_2","Garbage_Text","Garbage_CTV","Room","Walls_Floor","Walls_Floor_1","Rug","Rug_1","Rug_2","Books","Book_02","Book_02_1","Book_01_1","Book_01_2","Books_Label_1","Books_Label_2","Books_Text","Books_CTV","WallArt","Art_HitBox","Wall_Art_1","Wall_Art_2","Art_Label_1","Art_Label_2","Art_Text","Art_CTV","Clock","hourHand","useRef","minHand","useFrame","clock","current","z","floor","elapsedTime","cbody","cbody_1","ref","Large_Hand","Small_Hand","Clock_Label_1","Clock_Label_2","Clock_Text","Clock_CTV","Glasses","Glasses_HitBox","Glasses_Label_1","Glasses_Label_2","Glasses_Text","Glasses_CTV","TextHeaders","Hello","Im_Trevor","I_Create","Look_Around","scale","Desk","Desk_1","Desk_2","Model","group","useGLTF","useThree","camera","viewport","fov","lookAt","updateProjectionMatrix","dispose","preload","Loader","Html","center","props","overlayOpen","setOverlayOpen","children","App","overlayItems","pixelRatio","window","devicePixelRatio","intensity","fallback","items","opacity","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.23f8a6b6.chunk.js","sourcesContent":["import React, { useEffect, useRef, useState } from 'react'\nimport { useGLTF } from '@react-three/drei/useGLTF'\nimport { useFrame, useThree } from 'react-three-fiber'\n\nfunction Chair({ materials, nodes, setItems }) {\n  const [label, setLabel] = useState(false)\n\n  useEffect(() => {\n    document.body.style.cursor = label ? 'pointer' : 'auto'\n  }, [label])\n\n  const Overlay = (\n    <div>\n      <h1 className=\"title\">Chair</h1>\n    </div>\n  )\n\n  return (\n    <group>\n      <group\n        onPointerEnter={() => {\n          setLabel(true)\n        }}\n        onPointerLeave={() => {\n          setLabel(false)\n        }}\n        onClick={() => {\n          setItems(Overlay)\n        }}\n      >\n        <mesh\n          material={materials.Default_Color}\n          geometry={nodes.Chair.geometry}\n        />\n        <mesh\n          material={materials.Default_White}\n          geometry={nodes.Chair_1.geometry}\n        />\n      </group>\n      <group visible={label}>\n        <mesh\n          material={materials.Default_Color}\n          geometry={nodes.Chair_Label_1.geometry}\n        />\n        <mesh\n          material={materials.Default_White}\n          geometry={nodes.Chair_Label_2.geometry}\n        />\n        <mesh\n          material={materials.Default_Color}\n          geometry={nodes.Chair_Text.geometry}\n          position={[-0.06, 0.83, 0.14]}\n          rotation={[Math.PI / 2, 0, -Math.PI / 2]}\n        >\n          <mesh\n            material={materials.Default_Color}\n            geometry={nodes.Chair_CTV.geometry}\n            position={[0, 0, 0.04]}\n          />\n        </mesh>\n      </group>\n    </group>\n  )\n}\n\nfunction Lamp({ materials, nodes, setItems }) {\n  const [label, setLabel] = useState(false)\n\n  useEffect(() => {\n    document.body.style.cursor = label ? 'pointer' : 'auto'\n  }, [label])\n\n  const Overlay = (\n    <div>\n      <h1 className=\"title\">Ideas</h1>\n    </div>\n  )\n\n  return (\n    <group>\n      <group\n        onPointerEnter={() => {\n          setLabel(true)\n        }}\n        onPointerLeave={() => {\n          setLabel(false)\n        }}\n        onClick={() => {\n          setItems(Overlay)\n        }}\n      >\n        <mesh\n          material={materials.Default_Color}\n          geometry={nodes.Hood_1.geometry}\n        />\n        <mesh\n          material={materials.Default_White}\n          geometry={nodes.Hood_2.geometry}\n        />\n      </group>\n      <group visible={label}>\n        <mesh\n          material={materials.Default_Color}\n          geometry={nodes.Lamp_Label_1.geometry}\n        />\n        <mesh\n          material={materials.Default_White}\n          geometry={nodes.Lamp_Label_2.geometry}\n        />\n        <mesh\n          material={materials.Default_Color}\n          geometry={nodes.Lamp_Text.geometry}\n          position={[-0.68, 0.88, 0.1]}\n          rotation={[Math.PI / 2, 0, -Math.PI / 2]}\n        >\n          <mesh\n            material={materials.Default_Color}\n            geometry={nodes.Lamp_CTV.geometry}\n            position={[-0.01, 0, 0.04]}\n          />\n        </mesh>\n      </group>\n    </group>\n  )\n}\n\nfunction Soda({ materials, nodes, setItems }) {\n  const [label, setLabel] = useState(false)\n\n  useEffect(() => {\n    document.body.style.cursor = label ? 'pointer' : 'auto'\n  }, [label])\n\n  const Overlay = (\n    <div>\n      <h1 className=\"title\">Soda</h1>\n    </div>\n  )\n\n  return (\n    <group>\n      <group\n        onPointerEnter={() => {\n          setLabel(true)\n        }}\n        onPointerLeave={() => {\n          setLabel(false)\n        }}\n        onClick={() => {\n          setItems(Overlay)\n        }}\n      >\n        <mesh\n          material={materials.Default_White}\n          geometry={nodes.Can.geometry}\n        />\n        <mesh\n          material={materials.Default_Color}\n          geometry={nodes.Can_1.geometry}\n        />\n      </group>\n      <group visible={label}>\n        <mesh\n          material={materials.Default_Color}\n          geometry={nodes.Soda_Label_1.geometry}\n        />\n        <mesh\n          material={materials.Default_White}\n          geometry={nodes.Soda_Label_2.geometry}\n        />\n        <mesh\n          material={materials.Default_Color}\n          geometry={nodes.Soda_Text.geometry}\n          position={[-0.59, 0.75, -0.52]}\n          rotation={[Math.PI / 2, 0, -Math.PI / 2]}\n        >\n          <mesh\n            material={materials.Default_Color}\n            geometry={nodes.Soda_CTV.geometry}\n            position={[-0.01, 0, 0.04]}\n          />\n        </mesh>\n      </group>\n    </group>\n  )\n}\n\nfunction Blinds({ materials, nodes, setItems }) {\n  const [label, setLabel] = useState(false)\n\n  useEffect(() => {\n    document.body.style.cursor = label ? 'pointer' : 'auto'\n  }, [label])\n\n  const Overlay = (\n    <div>\n      <h1 className=\"title\">Window</h1>\n    </div>\n  )\n\n  return (\n    <group>\n      <mesh\n        visible={false}\n        onPointerEnter={() => {\n          setLabel(true)\n        }}\n        onPointerLeave={() => {\n          setLabel(false)\n        }}\n        onClick={() => {\n          setItems(Overlay)\n        }}\n        material={materials.Material}\n        geometry={nodes.Blinds_HitBox.geometry}\n      />\n      <mesh\n        material={materials.Default_White}\n        geometry={nodes.Blinds.geometry}\n      />\n      <group visible={label}>\n        <mesh\n          material={materials.Default_Color}\n          geometry={nodes.Blinds_Label_1.geometry}\n        />\n        <mesh\n          material={materials.Default_White}\n          geometry={nodes.Blinds_Label_2.geometry}\n        />\n        <mesh\n          material={materials.Default_Color}\n          geometry={nodes.Blinds_Text.geometry}\n          position={[-0.54, 1.02, -0.9]}\n          rotation={[Math.PI / 2, 0, 0]}\n        >\n          <mesh\n            material={materials.Default_Color}\n            geometry={nodes.Blinds_CTV.geometry}\n            position={[0.01, 0, 0.04]}\n          />\n        </mesh>\n      </group>\n    </group>\n  )\n}\n\nfunction Computer({ materials, nodes, setItems }) {\n  const [label, setLabel] = useState(false)\n\n  useEffect(() => {\n    document.body.style.cursor = label ? 'pointer' : 'auto'\n  }, [label])\n\n  const Overlay = (\n    <div>\n      <h1 className=\"title\">Projects</h1>\n    </div>\n  )\n\n  return (\n    <group>\n      <group\n        onPointerEnter={() => {\n          setLabel(true)\n        }}\n        onPointerLeave={() => {\n          setLabel(false)\n        }}\n        onClick={() => {\n          setItems(Overlay)\n        }}\n      >\n        <mesh\n          material={materials.Default_White}\n          geometry={nodes.Computer_1.geometry}\n        />\n        <mesh\n          material={materials.Default_Color}\n          geometry={nodes.Computer_2.geometry}\n        />\n        <mesh\n          material={materials.Default_White}\n          geometry={nodes.Cube.geometry}\n        />\n        <mesh\n          material={materials.Default_Color}\n          geometry={nodes.Cube_1.geometry}\n        />\n      </group>\n      <group visible={label}>\n        <mesh\n          material={materials.Default_Color}\n          geometry={nodes.Laptop_Label_1.geometry}\n        />\n        <mesh\n          material={materials.Default_White}\n          geometry={nodes.Laptop_Label_2.geometry}\n        />\n        <mesh\n          material={materials.Default_Color}\n          geometry={nodes.Laptop_Text.geometry}\n          position={[-0.64, 0.73, -0.19]}\n          rotation={[Math.PI / 2, 0, -Math.PI / 2]}\n        >\n          <mesh\n            material={materials.Default_Color}\n            geometry={nodes.Laptop_CTV.geometry}\n            position={[0.01, 0, 0.04]}\n          />\n        </mesh>\n      </group>\n    </group>\n  )\n}\n\nfunction Garbage({ materials, nodes, setItems }) {\n  const [label, setLabel] = useState(false)\n\n  useEffect(() => {\n    document.body.style.cursor = label ? 'pointer' : 'auto'\n  }, [label])\n\n  const Overlay = (\n    <div>\n      <h1 className=\"title\">Garbage</h1>\n    </div>\n  )\n\n  return (\n    <group>\n      <group\n        onPointerEnter={() => {\n          setLabel(true)\n        }}\n        onPointerLeave={() => {\n          setLabel(false)\n        }}\n        onClick={() => {\n          setItems(Overlay)\n        }}\n      >\n        <mesh\n          material={materials.Default_Color}\n          geometry={nodes.Bin_1.geometry}\n        />\n        <mesh\n          material={materials.Default_White}\n          geometry={nodes.Bin_2.geometry}\n        />\n        <mesh\n          material={materials.Default_White}\n          geometry={nodes.Garbage.geometry}\n        />\n      </group>\n      <group visible={label}>\n        <mesh\n          material={materials.Default_Color}\n          geometry={nodes.Garbage_Label_1.geometry}\n        />\n        <mesh\n          material={materials.Default_White}\n          geometry={nodes.Garbage_Label_2.geometry}\n        />\n        <mesh\n          material={materials.Default_Color}\n          geometry={nodes.Garbage_Text.geometry}\n          position={[-0.59, 0.44, 0.67]}\n          rotation={[Math.PI / 2, 0, -Math.PI / 2]}\n        >\n          <mesh\n            material={materials.Default_Color}\n            geometry={nodes.Garbage_CTV.geometry}\n            position={[0.02, 0, 0.04]}\n          />\n        </mesh>\n      </group>\n    </group>\n  )\n}\n\nfunction Room({ materials, nodes }) {\n  return (\n    <group>\n      <mesh\n        material={materials.Default_White}\n        geometry={nodes.Walls_Floor.geometry}\n      />\n      <mesh\n        material={materials.Default_Color}\n        geometry={nodes.Walls_Floor_1.geometry}\n      />\n    </group>\n  )\n}\n\nfunction Rug({ materials, nodes }) {\n  return (\n    <group>\n      <mesh\n        material={materials.Default_Color}\n        geometry={nodes.Rug_1.geometry}\n      />\n      <mesh\n        material={materials.Default_White}\n        geometry={nodes.Rug_2.geometry}\n      />\n    </group>\n  )\n}\n\nfunction Books({ materials, nodes, setItems }) {\n  const [label, setLabel] = useState(false)\n\n  useEffect(() => {\n    document.body.style.cursor = label ? 'pointer' : 'auto'\n  }, [label])\n\n  const Overlay = (\n    <div>\n      <h1 className=\"title\">Education</h1>\n    </div>\n  )\n\n  return (\n    <group>\n      <group\n        onPointerEnter={() => {\n          setLabel(true)\n        }}\n        onPointerLeave={() => {\n          setLabel(false)\n        }}\n        onClick={() => {\n          setItems(Overlay)\n        }}\n      >\n        <mesh\n          material={materials.Default_Color}\n          geometry={nodes.Book_02.geometry}\n        />\n        <mesh\n          material={materials.Default_White}\n          geometry={nodes.Book_02_1.geometry}\n        />\n        <mesh\n          material={materials.Default_Color}\n          geometry={nodes.Book_01_1.geometry}\n        />\n        <mesh\n          material={materials.Default_White}\n          geometry={nodes.Book_01_2.geometry}\n        />\n      </group>\n      <group visible={label}>\n        <mesh\n          material={materials.Default_Color}\n          geometry={nodes.Books_Label_1.geometry}\n        />\n        <mesh\n          material={materials.Default_White}\n          geometry={nodes.Books_Label_2.geometry}\n        />\n        <mesh\n          material={materials.Default_Color}\n          geometry={nodes.Books_Text.geometry}\n          position={[-0.81, 0.71, -0.59]}\n          rotation={[Math.PI / 2, 0, -Math.PI / 2]}\n        >\n          <mesh\n            material={materials.Default_Color}\n            geometry={nodes.Books_CTV.geometry}\n            position={[0.03, 0, 0.04]}\n          />\n        </mesh>\n      </group>\n    </group>\n  )\n}\n\nfunction WallArt({ materials, nodes, setItems }) {\n  const [label, setLabel] = useState(false)\n\n  useEffect(() => {\n    document.body.style.cursor = label ? 'pointer' : 'auto'\n  }, [label])\n\n  const Overlay = (\n    <div>\n      <h1 className=\"title\">Music</h1>\n    </div>\n  )\n\n  return (\n    <group>\n      <mesh\n        visible={false}\n        material={materials.Material}\n        geometry={nodes.Art_HitBox.geometry}\n        onPointerEnter={() => {\n          setLabel(true)\n        }}\n        onPointerLeave={() => {\n          setLabel(false)\n        }}\n        onClick={() => {\n          setItems(Overlay)\n        }}\n      />\n      <mesh\n        material={materials.Default_White}\n        geometry={nodes.Wall_Art_1.geometry}\n      />\n      <mesh\n        material={materials.Default_Color}\n        geometry={nodes.Wall_Art_2.geometry}\n      />\n      <group visible={label}>\n        <mesh\n          material={materials.Default_Color}\n          geometry={nodes.Art_Label_1.geometry}\n        />\n        <mesh\n          material={materials.Default_White}\n          geometry={nodes.Art_Label_2.geometry}\n        />\n        <mesh\n          material={materials.Default_Color}\n          geometry={nodes.Art_Text.geometry}\n          position={[-0.77, 0.58, 0.84]}\n          rotation={[Math.PI / 2, 0, -Math.PI / 2]}\n        >\n          <mesh\n            material={materials.Default_Color}\n            geometry={nodes.Art_CTV.geometry}\n            position={[0.02, 0, 0.04]}\n          />\n        </mesh>\n      </group>\n    </group>\n  )\n}\n\nfunction Clock({ materials, nodes, setItems }) {\n  const [label, setLabel] = useState(false)\n  const hourHand = useRef()\n  const minHand = useRef()\n\n  useEffect(() => {\n    document.body.style.cursor = label ? 'pointer' : 'auto'\n  }, [label])\n\n  const Overlay = (\n    <div>\n      <h1 className=\"title\">Time</h1>\n    </div>\n  )\n\n  useFrame(({ clock }) => {\n    minHand.current.rotation.z = Math.floor(-clock.elapsedTime)/10\n    hourHand.current.rotation.z = minHand.current.rotation.z/10\n  })\n\n  return (\n    <group>\n      <group\n        onPointerEnter={() => {\n          setLabel(true)\n        }}\n        onPointerLeave={() => {\n          setLabel(false)\n        }}\n        onClick={() => {\n          setItems(Overlay)\n        }}\n      >\n        <mesh\n          material={materials.Default_Color}\n          geometry={nodes.cbody.geometry}\n        />\n        <mesh\n          material={materials.Default_White}\n          geometry={nodes.cbody_1.geometry}\n        />\n        <mesh\n          ref={minHand}\n          material={materials.Default_Color}\n          geometry={nodes.Large_Hand.geometry}\n          position={[0.45, 1.12158, -0.9]}\n        />\n        <mesh\n          ref={hourHand}\n          material={materials.Default_Color}\n          geometry={nodes.Small_Hand.geometry}\n          position={[0.45, 1.12151, -0.9]}\n        />\n      </group>\n      <group visible={label}>\n        <mesh\n          material={materials.Default_Color}\n          geometry={nodes.Clock_Label_1.geometry}\n        />\n        <mesh\n          material={materials.Default_White}\n          geometry={nodes.Clock_Label_2.geometry}\n        />\n        <mesh\n          material={materials.Default_Color}\n          geometry={nodes.Clock_Text.geometry}\n          position={[0.59, 1.35, -0.9]}\n          rotation={[Math.PI / 2, 0, 0]}\n        >\n          <mesh\n            material={materials.Default_Color}\n            geometry={nodes.Clock_CTV.geometry}\n            position={[-0.01, 0, 0.04]}\n          />\n        </mesh>\n      </group>\n    </group>\n  )\n}\n\nfunction Glasses({ materials, nodes, setItems }) {\n  const [label, setLabel] = useState(false)\n\n  useEffect(() => {\n    document.body.style.cursor = label ? 'pointer' : 'auto'\n  }, [label])\n\n  const Overlay = (\n    <div>\n      <h1 className=\"title\">Glasses</h1>\n    </div>\n  )\n\n  return (\n    <group>\n      <mesh\n        visible={false}\n        material={materials.Material}\n        geometry={nodes.Glasses_HitBox.geometry}\n        onPointerEnter={() => {\n          setLabel(true)\n        }}\n        onPointerLeave={() => {\n          setLabel(false)\n        }}\n        onClick={() => {\n          setItems(Overlay)\n        }}\n      />\n      <mesh\n        material={materials.Default_White}\n        geometry={nodes.Glasses.geometry}\n      />\n      <group visible={label}>\n        <mesh\n          material={materials.Default_Color}\n          geometry={nodes.Glasses_Label_1.geometry}\n        />\n        <mesh\n          material={materials.Default_White}\n          geometry={nodes.Glasses_Label_2.geometry}\n        />\n        <mesh\n          material={materials.Default_Color}\n          geometry={nodes.Glasses_Text.geometry}\n          position={[-0.72, 0.69, -0.42]}\n          rotation={[Math.PI / 2, 0, -Math.PI / 2]}\n        >\n          <mesh\n            material={materials.Default_Color}\n            geometry={nodes.Glasses_CTV.geometry}\n            position={[0.01, 0, 0.04]}\n          />\n        </mesh>\n      </group>\n    </group>\n  )\n}\n\nfunction TextHeaders({ materials, nodes }) {\n  return (\n    <group>\n      <mesh\n        material={materials.Default_Color}\n        geometry={nodes.Hello.geometry}\n        position={[-0.83, 1.18, 0.73]}\n        rotation={[Math.PI / 2, 0, -Math.PI / 2]}\n      />\n      <mesh\n        material={materials.Default_Color}\n        geometry={nodes.Im_Trevor.geometry}\n        position={[-0.83, 0.95, 0.14]}\n        rotation={[Math.PI / 2, 0, -Math.PI / 2]}\n      />\n      <mesh\n        material={materials.Default_Color}\n        geometry={nodes.I_Create.geometry}\n        position={[-0.83, 0.87, 0.14]}\n        rotation={[Math.PI / 2, 0, -Math.PI / 2]}\n      />\n      <mesh\n        material={materials.Default_Color}\n        geometry={nodes.Look_Around.geometry}\n        position={[0.21, 0.41, -0.9]}\n        rotation={[Math.PI / 2, 0, 0]}\n        scale={[0.87, 0.87, 0.87]}\n      />\n    </group>\n  )\n}\n\nfunction Desk({ materials, nodes }) {\n  return (\n    <group>\n      <mesh\n        material={materials.Default_White}\n        geometry={nodes.Desk_1.geometry}\n      />\n      <mesh\n        material={materials.Default_Color}\n        geometry={nodes.Desk_2.geometry}\n      />\n    </group>\n  )\n}\n\nexport default function Model({ setItems }) {\n  const group = useRef()\n  const { nodes, materials } = useGLTF('/portfolio/models/iso-poly.gltf')\n\n  const { camera, viewport } = useThree()\n\n  useEffect(() => {\n    camera.fov = 23\n    camera.lookAt(0, 0, 0)\n    camera.updateProjectionMatrix()\n  })\n\n  return (\n    <group\n      ref={group}\n      dispose={null}\n      position={[0, -0.76, 0]}\n      rotation={[0, -0.8, 0]}\n    >\n      <TextHeaders nodes={nodes} materials={materials} />\n      <Room nodes={nodes} materials={materials} />\n      <Rug nodes={nodes} materials={materials} />\n      <Desk nodes={nodes} materials={materials} />\n\n      <Chair nodes={nodes} materials={materials} setItems={setItems} />\n      <Lamp nodes={nodes} materials={materials} setItems={setItems} />\n      <Soda nodes={nodes} materials={materials} setItems={setItems} />\n      <Blinds nodes={nodes} materials={materials} setItems={setItems} />\n      <Computer nodes={nodes} materials={materials} setItems={setItems} />\n      <Garbage nodes={nodes} materials={materials} setItems={setItems} />\n      <Books nodes={nodes} materials={materials} setItems={setItems} />\n      <WallArt nodes={nodes} materials={materials} setItems={setItems} />\n      <Clock nodes={nodes} materials={materials} setItems={setItems} />\n      <Glasses nodes={nodes} materials={materials} setItems={setItems} />\n    </group>\n  )\n}\n\nuseGLTF.preload('/portfolio/models/iso-poly.gltf')\n","import React, { Suspense, useRef, useState } from 'react'\r\nimport { Html, OrbitControls } from '@react-three/drei'\r\nimport { EffectComposer, Noise } from 'react-postprocessing'\r\nimport { Canvas } from 'react-three-fiber'\r\nimport Model from './Iso-poly'\r\n\r\nimport './App.css'\r\n\r\nfunction Loader() {\r\n  return (\r\n    <Html center>\r\n      <div className=\"loader-2\">Finishing up...</div>\r\n    </Html>\r\n  )\r\n}\r\n\r\nfunction Overlay(props) {\r\n  function closeOverlay() {\r\n    props.setOverlayOpen(false)\r\n  }\r\n  return (\r\n    <>\r\n      {props.overlayOpen ? (\r\n        <div className=\"overlay\">\r\n          <div className=\"closeBtn\" onClick={closeOverlay}>\r\n            x\r\n          </div>\r\n          <div className=\"content\">{props.children}</div>\r\n        </div>\r\n      ) : null}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default function App() {\r\n  const [overlayOpen, setOverlayOpen] = useState(false)\r\n  const overlayItems = useRef([])\r\n\r\n  const setItems = (items) => {\r\n    overlayItems.current = items\r\n    setOverlayOpen(true)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Canvas\r\n        pixelRatio={window.devicePixelRatio}\r\n        camera={{ position: [0, 2, 4] }}\r\n      >\r\n        {/* <OrbitControls /> */}\r\n        <ambientLight intensity={0.9} />\r\n        <directionalLight intensity={0.5} />\r\n        <Suspense fallback={<Loader />}>\r\n          <Model setItems={setItems} />\r\n        </Suspense>\r\n        <EffectComposer>\r\n          <Noise opacity={0.03} />\r\n        </EffectComposer>\r\n      </Canvas>\r\n      <Overlay overlayOpen={overlayOpen} setOverlayOpen={setOverlayOpen}>\r\n        {overlayItems.current}\r\n      </Overlay>\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\n\r\nimport App from './App'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))\r\n"],"sourceRoot":""}