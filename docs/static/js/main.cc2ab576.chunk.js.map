{"version":3,"sources":["components/Loader.js","components/Camera.js","components/Overlay.js","models/Text.js","models/Static.js","models/Chair.js","models/Lamp.js","models/Clock.js","models/Blinds.js","models/Computer.js","models/Garbage.js","models/WallArt.js","models/Books.js","static/profile.jpg","models/Glasses.js","Models.js","App.js","index.js"],"names":["Loader","Html","center","className","CustomCamera","camera","useThree","useEffect","fov","lookAt","updateProjectionMatrix","Overlay","props","overlayOpen","onClick","setOverlayOpen","children","TextHeaders","materials","nodes","useState","active","setActive","active1","setActive1","active2","setActive2","active3","setActive3","pX","sProps","useSpring","pos0","pos1","pos2","pos3","config","mass","tension","friction","precision","setTimeout","mesh","material","Default_Color","geometry","Hello","position","rotation","Math","PI","Im_Trevor","I_Create","Look_Around","Room","Default_White","Walls_Floor","Walls_Floor_1","Rug","Rug_1","Rug_2","Desk","Desk_1","Desk_2","defaultConfig","Chair","setItems","label","setLabel","pos","ani","rot","group","onPointerEnter","onPointerLeave","Chair_1","Chair_2","visible","Chair_Label_1","Chair_Label_2","Chair_Text","Chair_CTV","OverlayContent","Lamp","document","body","style","cursor","Body_1","Body_2","Material","Lamp_HitBox","Hood_1","Hood_2","Lamp_Label_1","Lamp_Label_2","Lamp_Text","Lamp_CTV","Clock","hourHand","useRef","minHand","useFrame","current","z","cbody","cbody_1","ref","Large_Hand","Small_Hand","Clock_Label_1","Clock_Label_2","Clock_Text","Clock_CTV","href","target","Blinds","Blinds_HitBox","Array","fill","undefined","map","m","i","key","Top","Bottom","StringL","StringR","Blinds_Label_1","Blinds_Label_2","Blinds_Text","Blinds_CTV","Computer","allowAnimation","rot2","Computer_1","Computer_2","Cube","Cube_1","Lid_1","Lid_2","Hinge","Laptop_Label_1","Laptop_Label_2","Laptop_Text","Laptop_CTV","Garbage","animation","setAnimation","window","open","Bin_1","Bin_2","Garbage_Label_1","Garbage_Label_2","Garbage_Text","Garbage_CTV","WallArt","sunRef","sun2Ref","recordRef","armRef","c1Ref","c2Ref","idx","tmp","updateSunTransforms","scale","y","sin","spinRecordAndArm","x","cos","updateStringTransforms","clock","running","start","elapsedTime","stop","Art_HitBox","Wall_Art","Wall_Art_1","Sun01","Sun02","Arm","Circle1","Circle2","Record_1","Record_2","Lines","Art_Label_1","Art_Label_2","Art_Text","Art_CTV","Books","Book_02","Book_02_1","Book_01_1","Book_01_2","Books_Label_1","Books_Label_2","Books_Text","Books_CTV","Glasses","src","Profile","alt","Glasses_HitBox","Glasses_1","Glasses_2","Glasses_Label_1","Glasses_Label_2","Glasses_Text","Glasses_CTV","Models","useGLTF","dispose","preload","App","overlayItems","GPUTier","useDetectGPU","console","log","pixelRatio","devicePixelRatio","intensity","fallback","items","tier","opacity","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.cc2ab576.chunk.js","sourcesContent":["import { Html } from '@react-three/drei'\r\nimport React from 'react'\r\n\r\nexport function Loader() {\r\n  return (\r\n    <Html center>\r\n      <div className=\"loader-2\">Finishing up...</div>\r\n    </Html>\r\n  )\r\n}\r\n","import { useEffect } from 'react'\r\nimport { useThree } from 'react-three-fiber'\r\n\r\nexport function CustomCamera() {\r\n  const { camera } = useThree()\r\n\r\n  const setDefaultView = () => {\r\n    camera.fov = 23\r\n    camera.lookAt(0, 0, 0)\r\n    camera.updateProjectionMatrix()\r\n  }\r\n\r\n  useEffect(() => {\r\n    setDefaultView()\r\n  }, [])\r\n  return null\r\n}\r\n","import React from 'react'\r\n\r\n\r\nexport function Overlay(props) {\r\n    function closeOverlay() {\r\n      props.setOverlayOpen(false)\r\n    }\r\n    return (\r\n      <>\r\n        {props.overlayOpen ? (\r\n          <div className=\"overlay\">\r\n            <div className=\"closeBtn\" onClick={closeOverlay}>\r\n              x\r\n            </div>\r\n            <div className=\"content\">{props.children}</div>\r\n          </div>\r\n        ) : null}\r\n      </>\r\n    )\r\n  }","import React, { useEffect, useState } from 'react'\r\n\r\nimport { useSpring } from '@react-spring/core'\r\nimport { a } from '@react-spring/three'\r\n\r\nexport function TextHeaders({ materials, nodes }) {\r\n  const [active, setActive] = useState(false)\r\n  const [active1, setActive1] = useState(false)\r\n  const [active2, setActive2] = useState(false)\r\n  const [active3, setActive3] = useState(false)\r\n\r\n  const pX = [\r\n    [-0.83, 1.18, 0.73],\r\n    [-0.83, 0.95, 0.14],\r\n    [-0.83, 0.87, 0.14],\r\n    [0.21, 0.41, -0.9],\r\n  ]\r\n\r\n  const sProps = useSpring({\r\n    pos0: active ? pX[0] : [pX[0][0] - 1, pX[0][1], pX[0][2]],\r\n    pos1: active1 ? pX[1] : [pX[1][0] - 1, pX[1][1], pX[1][2]],\r\n    pos2: active2 ? pX[2] : [pX[2][0] - 1, pX[2][1], pX[2][2]],\r\n    pos3: active3 ? pX[3] : [pX[3][0], pX[3][1], pX[3][2] - 0.5],\r\n    config: { mass: 20, tension: 400, friction: 200, precision: 0.0001 },\r\n  })\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      setActive(true)\r\n    }, 250)\r\n    setTimeout(() => {\r\n      setActive1(true)\r\n    }, 750)\r\n    setTimeout(() => {\r\n      setActive2(true)\r\n    }, 1000)\r\n    setTimeout(() => {\r\n      setActive3(true)\r\n    }, 1500)\r\n  }, [])\r\n\r\n  return (\r\n    <group>\r\n      <a.mesh\r\n        material={materials.Default_Color}\r\n        geometry={nodes.Hello.geometry}\r\n        position={sProps.pos0}\r\n        rotation={[Math.PI / 2, 0, -Math.PI / 2]}\r\n      />\r\n      <a.mesh\r\n        material={materials.Default_Color}\r\n        geometry={nodes.Im_Trevor.geometry}\r\n        position={sProps.pos1}\r\n        rotation={[Math.PI / 2, 0, -Math.PI / 2]}\r\n      />\r\n      <a.mesh\r\n        material={materials.Default_Color}\r\n        geometry={nodes.I_Create.geometry}\r\n        position={sProps.pos2}\r\n        rotation={[Math.PI / 2, 0, -Math.PI / 2]}\r\n      />\r\n      <a.mesh\r\n        geometry={nodes.Look_Around.geometry}\r\n        material={materials.Default_Color}\r\n        position={sProps.pos3}\r\n        rotation={[1.56, 0, 0]}\r\n      />\r\n    </group>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nfunction Room({ materials, nodes }) {\r\n  return (\r\n    <group>\r\n      <mesh\r\n        material={materials.Default_White}\r\n        geometry={nodes.Walls_Floor.geometry}\r\n      />\r\n      <mesh\r\n        material={materials.Default_Color}\r\n        geometry={nodes.Walls_Floor_1.geometry}\r\n      />\r\n    </group>\r\n  )\r\n}\r\n\r\nfunction Rug({ materials, nodes }) {\r\n  return (\r\n    <group>\r\n      <mesh\r\n        material={materials.Default_Color}\r\n        geometry={nodes.Rug_1.geometry}\r\n      />\r\n      <mesh\r\n        material={materials.Default_White}\r\n        geometry={nodes.Rug_2.geometry}\r\n      />\r\n    </group>\r\n  )\r\n}\r\n\r\nfunction Desk({ materials, nodes }) {\r\n  return (\r\n    <group>\r\n      <mesh\r\n        material={materials.Default_White}\r\n        geometry={nodes.Desk_1.geometry}\r\n      />\r\n      <mesh\r\n        material={materials.Default_Color}\r\n        geometry={nodes.Desk_2.geometry}\r\n      />\r\n    </group>\r\n  )\r\n}\r\n\r\nexport {\r\n  Desk,\r\n  Rug,\r\n  Room,\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\n\r\nimport { useSpring } from '@react-spring/core'\r\nimport { a } from '@react-spring/three'\r\n\r\nconst defaultConfig = {\r\n  mass: 5,\r\n  tension: 400,\r\n  friction: 150,\r\n  precision: 0.0001,\r\n}\r\n\r\nexport function Chair({ materials, nodes, setItems }) {\r\n  const [label, setLabel] = useState(false)\r\n  const [active, setActive] = useState(false)\r\n\r\n  const sProps = useSpring({\r\n    pos: active ? [0, 0, 0] : [1, 0, 0],\r\n    config: defaultConfig,\r\n  })\r\n\r\n  const ani = useSpring({\r\n    rot: label ? [0, 0.1, 0] : [0, 0, 0],\r\n    config: {\r\n      mass: 0.1,\r\n      tension: 50,\r\n      friction: 10,\r\n      precision: 0.0001,\r\n    },\r\n  })\r\n\r\n  const Overlay = (\r\n    <div>\r\n      <h1 className=\"title\">Chair</h1>\r\n    </div>\r\n  )\r\n\r\n  useEffect(() => {\r\n    setActive(true)\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    // document.body.style.cursor = label ? 'pointer' : 'auto'\r\n  }, [label])\r\n\r\n  return (\r\n    <a.group position={sProps.pos}>\r\n      <a.group\r\n        onPointerEnter={() => {\r\n          setLabel(true)\r\n        }}\r\n        onPointerLeave={() => {\r\n          setLabel(false)\r\n        }}\r\n        onClick={() => {\r\n          // setItems(Overlay)\r\n        }}\r\n        rotation={ani.rot}\r\n        position={[-0.19, 0.42, -0.14]}\r\n      >\r\n        <group>\r\n          <mesh\r\n            material={materials.Default_Color}\r\n            geometry={nodes.Chair_1.geometry}\r\n          />\r\n          <mesh\r\n            material={materials.Default_White}\r\n            geometry={nodes.Chair_2.geometry}\r\n          />\r\n        </group>\r\n      </a.group>\r\n      <group visible={false}>\r\n        <mesh\r\n          material={materials.Default_Color}\r\n          geometry={nodes.Chair_Label_1.geometry}\r\n        />\r\n        <mesh\r\n          material={materials.Default_White}\r\n          geometry={nodes.Chair_Label_2.geometry}\r\n        />\r\n        <mesh\r\n          material={materials.Default_Color}\r\n          geometry={nodes.Chair_Text.geometry}\r\n          position={[-0.06, 0.83, 0.14]}\r\n          rotation={[Math.PI / 2, 0, -Math.PI / 2]}\r\n        >\r\n          <mesh\r\n            material={materials.Default_Color}\r\n            geometry={nodes.Chair_CTV.geometry}\r\n            position={[0, 0, 0.04]}\r\n          />\r\n        </mesh>\r\n      </group>\r\n    </a.group>\r\n  )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\n\r\nimport { useSpring } from '@react-spring/core'\r\nimport { a } from '@react-spring/three'\r\n\r\nconst defaultConfig = {\r\n  mass: 5,\r\n  tension: 400,\r\n  friction: 150,\r\n  precision: 0.0001,\r\n}\r\n\r\nfunction OverlayContent() {\r\n  return (\r\n    <>\r\n      <h1 className=\"title\">Skills/Languages</h1>\r\n      <div className=\"tile-grid horizontal\">\r\n        <div className=\"tile short\">\r\n          <div className=\"tile-content\">\r\n            Frontend <br />\r\n            <span className=\"description\">\r\n              HTML, CSS, JS, React.js, Three.js\r\n            </span>\r\n          </div>\r\n        </div>\r\n        <div className=\"tile short\">\r\n          <div className=\"tile-content\">\r\n            Backend <br />\r\n            <span className=\"description\">Node.js, C++, PHP, Java</span>\r\n          </div>\r\n        </div>\r\n        <div className=\"tile short\">\r\n          <div className=\"tile-content\">\r\n            Functional\r\n            <br />\r\n            <span className=\"description\">\r\n              Git, NPM, Linux, Bash, OracleSQL, MongoDB\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport function Lamp({ materials, nodes, setItems }) {\r\n  const [label, setLabel] = useState(false)\r\n  const [active, setActive] = useState(false)\r\n\r\n  const sProps = useSpring({\r\n    pos: active ? [0, 0, 0] : [0, 1, 0],\r\n    rot: active ? [0, 0, 0] : [0, Math.PI, 0],\r\n    config: defaultConfig,\r\n  })\r\n\r\n  const ani = useSpring({\r\n    rot: label ? [0.2, 0, 0] : [0, 0, 0],\r\n    config: {\r\n      mass: 0.1,\r\n      tension: 50,\r\n      friction: 10,\r\n      precision: 0.0001,\r\n    },\r\n  })\r\n\r\n  const Overlay = (\r\n    <div>\r\n      <h1 className=\"title\">Skills</h1>\r\n    </div>\r\n  )\r\n\r\n  useEffect(() => {\r\n    setActive(true)\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    document.body.style.cursor = label ? 'pointer' : 'auto'\r\n  }, [label])\r\n\r\n  return (\r\n    <a.group position={sProps.pos}>\r\n      <a.group\r\n        onPointerEnter={() => {\r\n          setLabel(true)\r\n        }}\r\n        onPointerLeave={() => {\r\n          setLabel(false)\r\n        }}\r\n        onClick={() => {\r\n          setItems(<OverlayContent />)\r\n        }}\r\n        position={[-0.71, 0.66, 0.22]}\r\n        rotation={sProps.rot}\r\n      >\r\n        <mesh\r\n          material={materials.Default_Color}\r\n          geometry={nodes.Body_1.geometry}\r\n        />\r\n        <mesh\r\n          material={materials.Default_White}\r\n          geometry={nodes.Body_2.geometry}\r\n        />\r\n        <mesh\r\n          visible={false}\r\n          material={materials.Material}\r\n          geometry={nodes.Lamp_HitBox.geometry}\r\n          position={[0.71, -0.66, -0.22]}\r\n        />\r\n        <a.group position={[0, 0.06, 0.03]} rotation={ani.rot}>\r\n          <mesh\r\n            material={materials.Default_Color}\r\n            geometry={nodes.Hood_1.geometry}\r\n          />\r\n          <mesh\r\n            material={materials.Default_White}\r\n            geometry={nodes.Hood_2.geometry}\r\n          />\r\n        </a.group>\r\n        <group position={[0.71, -0.66, -0.22]} visible={label}>\r\n          <mesh\r\n            material={materials.Default_Color}\r\n            geometry={nodes.Lamp_Label_1.geometry}\r\n          />\r\n          <mesh\r\n            material={materials.Default_White}\r\n            geometry={nodes.Lamp_Label_2.geometry}\r\n          />\r\n          <mesh\r\n            material={materials.Default_Color}\r\n            geometry={nodes.Lamp_Text.geometry}\r\n            position={[-0.68, 0.88, 0.09]}\r\n            rotation={[Math.PI / 2, 0, -Math.PI / 2]}\r\n          >\r\n            <mesh\r\n              material={materials.Default_Color}\r\n              geometry={nodes.Lamp_CTV.geometry}\r\n              position={[-0.02, 0, 0.03]}\r\n            />\r\n          </mesh>\r\n        </group>\r\n      </a.group>\r\n    </a.group>\r\n  )\r\n}\r\n","import React, { useEffect, useState, useRef } from 'react'\r\nimport { useFrame } from 'react-three-fiber'\r\n\r\nexport function Clock({ materials, nodes, setItems }) {\r\n  const [label, setLabel] = useState(false)\r\n  const hourHand = useRef()\r\n  const minHand = useRef()\r\n\r\n  useEffect(() => {\r\n    document.body.style.cursor = label ? 'pointer' : 'auto'\r\n  }, [label])\r\n\r\n  const Overlay = (\r\n    <div>\r\n      <h1 className=\"title\">Timeline</h1>\r\n    </div>\r\n  )\r\n\r\n  useFrame(() => {\r\n    minHand.current.rotation.z -= .002\r\n    hourHand.current.rotation.z = minHand.current.rotation.z / 10\r\n  })\r\n\r\n  return (\r\n    <group>\r\n      <group\r\n        onPointerEnter={() => {\r\n          // setLabel(true)\r\n        }}\r\n        onPointerLeave={() => {\r\n          // setLabel(false)\r\n        }}\r\n        onClick={() => {\r\n          // setItems(Overlay)\r\n        }}\r\n      >\r\n        <mesh\r\n          material={materials.Default_Color}\r\n          geometry={nodes.cbody.geometry}\r\n        />\r\n        <mesh\r\n          material={materials.Default_White}\r\n          geometry={nodes.cbody_1.geometry}\r\n        />\r\n        <mesh\r\n          ref={minHand}\r\n          material={materials.Default_Color}\r\n          geometry={nodes.Large_Hand.geometry}\r\n          position={[0.45, 1.12158, -0.9]}\r\n        />\r\n        <mesh\r\n          ref={hourHand}\r\n          material={materials.Default_Color}\r\n          geometry={nodes.Small_Hand.geometry}\r\n          position={[0.45, 1.12151, -0.9]}\r\n        />\r\n      </group>\r\n      <group visible={label}>\r\n        <mesh\r\n          material={materials.Default_Color}\r\n          geometry={nodes.Clock_Label_1.geometry}\r\n        />\r\n        <mesh\r\n          material={materials.Default_White}\r\n          geometry={nodes.Clock_Label_2.geometry}\r\n        />\r\n        <mesh\r\n          material={materials.Default_Color}\r\n          geometry={nodes.Clock_Text.geometry}\r\n          position={[0.56, 1.35, -0.9]}\r\n          rotation={[Math.PI / 2, 0, 0]}\r\n        >\r\n          <mesh\r\n            material={materials.Default_Color}\r\n            geometry={nodes.Clock_CTV.geometry}\r\n            position={[0.01, 0, 0.04]}\r\n          />\r\n        </mesh>\r\n      </group>\r\n    </group>\r\n  )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useSpring, a } from '@react-spring/three'\r\n\r\nfunction OverlayContent() {\r\n  return (\r\n    <>\r\n      <h1 className=\"title\">External Links</h1>\r\n      <div className=\"tile-grid\">\r\n        <div className=\"tile short\">\r\n          <div className=\"tile-content\">Linkedin</div>\r\n          <div className=\"tile-bottom\">\r\n            <a href=\"http://devices.red/\" target=\"new\">\r\n              visit page\r\n            </a>\r\n          </div>\r\n        </div>\r\n        <div className=\"tile short\">\r\n          <div className=\"tile-content\">Github</div>\r\n          <div className=\"tile-bottom\">\r\n            <a href=\"http://lostkey.host/\" target=\"new\">\r\n              visit page\r\n            </a>\r\n          </div>\r\n        </div>\r\n        <div className=\"tile short\">\r\n          <div className=\"tile-content\">StackOverflow</div>\r\n          <div className=\"tile-bottom\">\r\n            <a\r\n              href=\"https://stackoverflow.com/users/8026620/subtora\"\r\n              target=\"new\"\r\n            >\r\n              visit page\r\n            </a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport function Blinds({ materials, nodes, setItems }) {\r\n  const [label, setLabel] = useState(false)\r\n\r\n  const ani = useSpring({\r\n    rot: label ? [0, 0, 0] : [0.2, 0, 0],\r\n    config: {\r\n      mass: 0.1,\r\n      tension: 200,\r\n      friction: 10,\r\n      precision: 0.0001,\r\n    },\r\n  })\r\n\r\n  useEffect(() => {\r\n    document.body.style.cursor = label ? 'pointer' : 'auto'\r\n  }, [label])\r\n\r\n  return (\r\n    <group>\r\n      <group\r\n        onPointerEnter={() => {\r\n          setLabel(true)\r\n        }}\r\n        onPointerLeave={() => {\r\n          setLabel(false)\r\n        }}\r\n        onClick={() => {\r\n          setItems(<OverlayContent />)\r\n        }}\r\n      >\r\n        <mesh\r\n          visible={false}\r\n          material={materials.Material}\r\n          geometry={nodes.Blinds_HitBox.geometry}\r\n        />\r\n      </group>\r\n      {Array(25)\r\n        .fill(undefined)\r\n        .map((m, i) => (\r\n          <a.mesh\r\n            key={i}\r\n            material={materials.Default_White}\r\n            geometry={nodes.Blinds.geometry}\r\n            position={[-0.05, 0.68 + (i - 1) / 40, -0.95]}\r\n            rotation={ani.rot}\r\n          />\r\n        ))}\r\n      <mesh material={materials.Default_White} geometry={nodes.Top.geometry} />\r\n      <mesh\r\n        material={materials.Default_White}\r\n        geometry={nodes.Bottom.geometry}\r\n      />\r\n      <mesh\r\n        material={materials.Default_White}\r\n        geometry={nodes.StringL.geometry}\r\n      />\r\n      <mesh\r\n        material={materials.Default_White}\r\n        geometry={nodes.StringR.geometry}\r\n      />\r\n      <group visible={label}>\r\n        <mesh\r\n          material={materials.Default_Color}\r\n          geometry={nodes.Blinds_Label_1.geometry}\r\n        />\r\n        <mesh\r\n          material={materials.Default_White}\r\n          geometry={nodes.Blinds_Label_2.geometry}\r\n        />\r\n        <mesh\r\n          material={materials.Default_Color}\r\n          geometry={nodes.Blinds_Text.geometry}\r\n          position={[-0.54, 1.02, -0.9]}\r\n          rotation={[Math.PI / 2, 0, 0]}\r\n        >\r\n          <mesh\r\n            material={materials.Default_Color}\r\n            geometry={nodes.Blinds_CTV.geometry}\r\n            position={[0.01, 0, 0.04]}\r\n          />\r\n        </mesh>\r\n      </group>\r\n    </group>\r\n  )\r\n}\r\n","import React, { useEffect, useState, useRef } from 'react'\r\n\r\nimport { useSpring } from '@react-spring/core'\r\nimport { a } from '@react-spring/three'\r\n\r\nconst defaultConfig = {\r\n  mass: 5,\r\n  tension: 400,\r\n  friction: 150,\r\n  precision: 0.0001,\r\n}\r\n\r\nfunction OverlayContent() {\r\n  return (\r\n    <>\r\n      <h1 className=\"title\">Projects</h1>\r\n      <div className=\"tile-grid\">\r\n        <div className=\"tile\">\r\n          <div className=\"tile-content\">\r\n            Devices <br />\r\n            <span className=\"description\">\r\n              View super fast screenshots of any website in multiple device\r\n              formats at once. (React | Node | Puppeteer)\r\n            </span>\r\n          </div>\r\n          <div className=\"tile-bottom\">\r\n            <a href=\"http://devices.red/\" target=\"new\">\r\n              visit page\r\n            </a>\r\n          </div>\r\n        </div>\r\n        <div className=\"tile\">\r\n          <div className=\"tile-content\">\r\n            Lostkey <br />\r\n            <span className=\"description\">\r\n              Anonymous chat rooms in an SMS format. (React | Node | MongoDB)\r\n            </span>\r\n          </div>\r\n          <div className=\"tile-bottom\">\r\n            <a href=\"http://lostkey.host/\" target=\"new\">\r\n              visit page\r\n            </a>\r\n          </div>\r\n        </div>\r\n        <div className=\"tile\">\r\n          <div className=\"tile-content\">\r\n            WhenToWakeUp <br />\r\n            <span className=\"description\">\r\n              Find when is the best time to wake up if you went to bed right\r\n              now. (React)\r\n            </span>\r\n          </div>\r\n          <div className=\"tile-bottom\">\r\n            <a href=\"https://whentowakeup.com/\" target=\"new\">\r\n              visit page\r\n            </a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport function Computer({ materials, nodes, setItems }) {\r\n  const [label, setLabel] = useState(false)\r\n  const [active, setActive] = useState(false)\r\n  const allowAnimation = useRef(false)\r\n\r\n  const sProps = useSpring({\r\n    rot: active ? [0, 0, 0] : [0, 0, -1.8],\r\n    config: defaultConfig,\r\n  })\r\n\r\n  const ani = useSpring({\r\n    rot2: label ? [0, 0, -0.2] : [0, 0, 0],\r\n    config: {\r\n      mass: 0.1,\r\n      tension: 50,\r\n      friction: 10,\r\n      precision: 0.0001,\r\n    },\r\n  })\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      setActive(true)\r\n      allowAnimation.current = true\r\n    }, 1000)\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    document.body.style.cursor = label ? 'pointer' : 'auto'\r\n  }, [label])\r\n\r\n  return (\r\n    <group>\r\n      <group\r\n        onPointerEnter={() => {\r\n          if (allowAnimation.current) setLabel(true)\r\n        }}\r\n        onPointerLeave={() => {\r\n          if (allowAnimation.current) setLabel(false)\r\n        }}\r\n        onClick={() => {\r\n          if (allowAnimation.current) setItems(<OverlayContent />)\r\n        }}\r\n      >\r\n        <mesh\r\n          material={materials.Default_White}\r\n          geometry={nodes.Computer_1.geometry}\r\n        />\r\n        <mesh\r\n          material={materials.Default_Color}\r\n          geometry={nodes.Computer_2.geometry}\r\n        />\r\n        <mesh\r\n          material={materials.Default_White}\r\n          geometry={nodes.Cube.geometry}\r\n        />\r\n        <mesh\r\n          material={materials.Default_Color}\r\n          geometry={nodes.Cube_1.geometry}\r\n        />\r\n        <a.group position={[-0.713, 0.545, -0.14]} rotation={sProps.rot}>\r\n          <a.mesh\r\n            material={materials.Default_White}\r\n            geometry={nodes.Lid_1.geometry}\r\n            rotation={ani.rot2}\r\n          />\r\n          <a.mesh\r\n            material={materials.Default_Color}\r\n            geometry={nodes.Lid_2.geometry}\r\n            rotation={ani.rot2}\r\n          />\r\n        </a.group>\r\n        <mesh material={nodes.Hinge.material} geometry={nodes.Hinge.geometry} />\r\n      </group>\r\n\r\n      <group visible={label}>\r\n        <mesh\r\n          material={materials.Default_Color}\r\n          geometry={nodes.Laptop_Label_1.geometry}\r\n        />\r\n        <mesh\r\n          material={materials.Default_White}\r\n          geometry={nodes.Laptop_Label_2.geometry}\r\n        />\r\n        <mesh\r\n          material={materials.Default_Color}\r\n          geometry={nodes.Laptop_Text.geometry}\r\n          position={[-0.64, 0.73, -0.19]}\r\n          rotation={[Math.PI / 2, 0, -Math.PI / 2]}\r\n        >\r\n          <mesh\r\n            material={materials.Default_Color}\r\n            geometry={nodes.Laptop_CTV.geometry}\r\n            position={[0.01, 0, 0.04]}\r\n          />\r\n        </mesh>\r\n      </group>\r\n    </group>\r\n  )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\n\r\nimport { useSpring } from '@react-spring/core'\r\nimport { a } from '@react-spring/three'\r\n\r\nexport function Garbage({ materials, nodes }) {\r\n  const [label, setLabel] = useState(false)\r\n  const [animation, setAnimation] = useState(false)\r\n\r\n  useEffect(() => {\r\n    document.body.style.cursor = label ? 'pointer' : 'auto'\r\n  }, [label])\r\n\r\n  const ani = useSpring({\r\n    pos: animation ? [0, 0.03, 0] : [0, 0, 0],\r\n    config: {\r\n      mass: 0.1,\r\n      tension: 50,\r\n      friction: 10,\r\n      precision: 0.0001,\r\n    },\r\n  })\r\n\r\n  function animate() {\r\n    setAnimation(true)\r\n    setTimeout(() => {\r\n      setAnimation(false)\r\n    }, 100)\r\n  }\r\n\r\n  return (\r\n    <group>\r\n      <group\r\n        onPointerEnter={() => {\r\n          setLabel(true)\r\n          animate()\r\n        }}\r\n        onPointerLeave={() => {\r\n          setLabel(false)\r\n        }}\r\n        onClick={() => {\r\n          window.open('https://github.com/trevsm/portfolio');\r\n        }}\r\n      >\r\n        <mesh\r\n          material={materials.Default_Color}\r\n          geometry={nodes.Bin_1.geometry}\r\n        />\r\n        <mesh\r\n          material={materials.Default_White}\r\n          geometry={nodes.Bin_2.geometry}\r\n        />\r\n        <a.mesh\r\n          position={ani.pos}\r\n          material={materials.Default_White}\r\n          geometry={nodes.Garbage.geometry}\r\n        />\r\n      </group>\r\n      <group visible={label}>\r\n        <mesh\r\n          material={materials.Default_Color}\r\n          geometry={nodes.Garbage_Label_1.geometry}\r\n        />\r\n        <mesh\r\n          material={materials.Default_White}\r\n          geometry={nodes.Garbage_Label_2.geometry}\r\n        />\r\n        <mesh\r\n          material={materials.Default_Color}\r\n          geometry={nodes.Garbage_Text.geometry}\r\n          position={[-0.59, 0.44, 0.68]}\r\n          rotation={[Math.PI / 2, 0, -Math.PI / 2]}\r\n        >\r\n          <mesh\r\n            material={materials.Default_Color}\r\n            geometry={nodes.Garbage_CTV.geometry}\r\n            position={[0.03, 0, 0.04]}\r\n          />\r\n        </mesh>\r\n      </group>\r\n    </group>\r\n  )\r\n}\r\n","import React, { useEffect, useState, useRef } from 'react'\r\nimport { useFrame } from 'react-three-fiber'\r\n\r\nfunction OverlayContent() {\r\n  return (\r\n    <>\r\n      <h1 className=\"title\">Interests</h1>\r\n      <div className=\"tile-grid\">\r\n        <div className=\"tile\">\r\n          <div className=\"tile-content\">\r\n            Hiking <br />\r\n            <span className=\"description\">\r\n              Utah's High Uintah Mountains are breathtaking! If you ever get a\r\n              chance to go, take a map and visit one of the unnamed lakes near\r\n              Mt. Marsell.\r\n            </span>\r\n          </div>\r\n        </div>\r\n        <div className=\"tile\">\r\n          <div className=\"tile-content\">\r\n            Writing <br />\r\n            <span className=\"description\">\r\n              Poetry mostly; I've found that creating a piece, that resinates\r\n              with a reader, comes easier when you slow down and describe your\r\n              senses.\r\n            </span>\r\n          </div>\r\n        </div>\r\n        <div className=\"tile\">\r\n          <div className=\"tile-content\">\r\n            Swimming <br />\r\n            <span className=\"description\">\r\n              Always loved the water since I was little. The weightlessness and\r\n              lack of sound at the bottom of the pool really lets me think.\r\n            </span>\r\n          </div>\r\n        </div>\r\n        <div className=\"tile\">\r\n          <div className=\"tile-content\">\r\n            3D Modeling <br />\r\n            <span className=\"description\">\r\n              Originally, I started learning with CAD and 3D Printing the\r\n              result. Now, I've moved on to Blender and animation.\r\n            </span>\r\n          </div>\r\n        </div>\r\n        <div className=\"tile\">\r\n          <div className=\"tile-content\">\r\n            Music <br />\r\n            <span className=\"description\">\r\n              I believe my specific taste is \"Melodic Dubstep\", sorta like\r\n              Dubstep meets Trance:{' '}\r\n              <a\r\n                href=\"https://soundcloud.com/hegemon/skrux-essence\"\r\n                target=\"new\"\r\n              >\r\n                Check it out\r\n              </a>\r\n              .\r\n            </span>\r\n          </div>\r\n        </div>\r\n        <div className=\"tile\">\r\n          <div className=\"tile-content\">\r\n            Coding <br />\r\n            <span className=\"description\">\r\n              Creating solutions to problems people didn't know they had ;) But\r\n              really, coding is my favorite tool in my toolbox; There's always\r\n              somthing exciting to learn.\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport function WallArt({ materials, nodes, setItems }) {\r\n  const [label, setLabel] = useState(false)\r\n\r\n  const sunRef = useRef()\r\n  const sun2Ref = useRef()\r\n  const recordRef = useRef()\r\n  const armRef = useRef()\r\n  const c1Ref = useRef()\r\n  const c2Ref = useRef()\r\n\r\n  const idx = useRef(1.15)\r\n  const tmp = useRef(1)\r\n\r\n  useEffect(() => {\r\n    document.body.style.cursor = label ? 'pointer' : 'auto'\r\n  }, [label])\r\n\r\n  function updateSunTransforms() {\r\n    sunRef.current.scale.y = Math.sin(idx.current) / 5 + 0.83\r\n    sunRef.current.scale.z = Math.sin(idx.current) / 5 + 0.83\r\n\r\n    sun2Ref.current.scale.y = -Math.sin(idx.current) / 5 + 0.83\r\n    sun2Ref.current.scale.z = -Math.sin(idx.current) / 5 + 0.83\r\n\r\n    sunRef.current.position.y = Math.sin(idx.current) / 10 + 0.83\r\n    sun2Ref.current.position.y = -Math.sin(idx.current) / 10 + 0.83\r\n  }\r\n\r\n  function spinRecordAndArm() {\r\n    recordRef.current.rotation.x = -idx.current\r\n    armRef.current.rotation.x = Math.cos(idx.current) / 4 - 0.2\r\n  }\r\n\r\n  function updateStringTransforms() {\r\n    c1Ref.current.rotation.y = idx.current / 5\r\n    c2Ref.current.rotation.y = -idx.current / 5\r\n  }\r\n\r\n  useEffect(() => {\r\n    updateSunTransforms()\r\n    spinRecordAndArm()\r\n    updateStringTransforms()\r\n  }, [])\r\n\r\n  useFrame(({ clock }) => {\r\n    if (label) {\r\n      if (!clock.running) clock.start()\r\n      idx.current = clock.elapsedTime * 1.5 + tmp.current\r\n      updateSunTransforms()\r\n      spinRecordAndArm()\r\n      updateStringTransforms()\r\n    } else {\r\n      if (clock.running) {\r\n        tmp.current += clock.elapsedTime * 1.5\r\n        clock.stop()\r\n      }\r\n    }\r\n  })\r\n\r\n  return (\r\n    <group>\r\n      <group\r\n        onPointerEnter={() => {\r\n          setLabel(true)\r\n        }}\r\n        onPointerLeave={() => {\r\n          setLabel(false)\r\n        }}\r\n        onClick={() => {\r\n          setItems(<OverlayContent />)\r\n        }}\r\n      >\r\n        <mesh\r\n          material={materials.Default_White}\r\n          geometry={nodes.Art_HitBox.geometry}\r\n          position={[0.01, 0.01, 0]}\r\n        />\r\n      </group>\r\n      <mesh\r\n        material={materials.Default_White}\r\n        geometry={nodes.Wall_Art.geometry}\r\n      />\r\n      <mesh\r\n        material={materials.Default_Color}\r\n        geometry={nodes.Wall_Art_1.geometry}\r\n      />\r\n      <mesh\r\n        ref={sunRef}\r\n        material={materials.Default_Color}\r\n        geometry={nodes.Sun01.geometry}\r\n        position={[-0.83, 0.93, 0.8]}\r\n      />\r\n      <mesh\r\n        ref={sun2Ref}\r\n        material={materials.Default_Color}\r\n        geometry={nodes.Sun02.geometry}\r\n        position={[-0.83, 0.75, 0.72]}\r\n      />\r\n      <mesh\r\n        ref={armRef}\r\n        material={materials.Default_White}\r\n        geometry={nodes.Arm.geometry}\r\n        position={[-0.82, 1.01, 0.41]}\r\n      />\r\n      <mesh\r\n        ref={c1Ref}\r\n        material={materials.Default_Color}\r\n        geometry={nodes.Circle1.geometry}\r\n        position={[-1.1, 0.82, 0.76]}\r\n        scale={[0.73, 0.73, 0.73]}\r\n      />\r\n      <mesh\r\n        ref={c2Ref}\r\n        material={materials.Default_Color}\r\n        geometry={nodes.Circle2.geometry}\r\n        position={[-1.1, 0.82, 0.76]}\r\n        rotation={[0, -1.44, 0]}\r\n        scale={[0.73, 0.73, 0.73]}\r\n      />\r\n      <group ref={recordRef} position={[-0.83, 0.95, 0.49]}>\r\n        <mesh\r\n          material={materials.Default_White}\r\n          geometry={nodes.Record_1.geometry}\r\n        />\r\n        <mesh\r\n          material={materials.Default_Color}\r\n          geometry={nodes.Record_2.geometry}\r\n        />\r\n        <mesh\r\n          material={materials.Default_White}\r\n          geometry={nodes.Lines.geometry}\r\n        />\r\n      </group>\r\n      <group visible={label}>\r\n        <mesh\r\n          material={materials.Default_Color}\r\n          geometry={nodes.Art_Label_1.geometry}\r\n        />\r\n        <mesh\r\n          material={materials.Default_White}\r\n          geometry={nodes.Art_Label_2.geometry}\r\n        />\r\n        <mesh\r\n          material={materials.Default_Color}\r\n          geometry={nodes.Art_Text.geometry}\r\n          position={[-0.77, 0.58, 0.84]}\r\n          rotation={[Math.PI / 2, 0, -Math.PI / 2]}\r\n        >\r\n          <mesh\r\n            material={materials.Default_Color}\r\n            geometry={nodes.Art_CTV.geometry}\r\n            position={[0.02, 0, 0.04]}\r\n          />\r\n        </mesh>\r\n      </group>\r\n    </group>\r\n  )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\n\r\nimport { useSpring } from '@react-spring/core'\r\nimport { a } from '@react-spring/three'\r\n\r\nconst defaultConfig = {\r\n  mass: 5,\r\n  tension: 400,\r\n  friction: 150,\r\n  precision: 0.0001,\r\n}\r\n\r\nexport function Books({ materials, nodes, setItems }) {\r\n  const [label, setLabel] = useState(false)\r\n  const [active, setActive] = useState(false)\r\n\r\n  const sProps = useSpring({\r\n    pos: active ? [0, 0, 0] : [0, 1, 0],\r\n    config: defaultConfig,\r\n  })\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      setActive(true)\r\n    }, 300)\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    document.body.style.cursor = label ? 'pointer' : 'auto'\r\n  }, [label])\r\n\r\n  return (\r\n    <a.group position={sProps.pos}>\r\n      <group\r\n        onPointerEnter={() => {\r\n          setLabel(true)\r\n        }}\r\n        onPointerLeave={() => {\r\n          setLabel(false)\r\n        }}\r\n        onClick={() => {\r\n          window.open(\r\n            '/portfolio/Trevor_Smith.pdf'\r\n          )\r\n        }}\r\n      >\r\n        <mesh\r\n          material={materials.Default_Color}\r\n          geometry={nodes.Book_02.geometry}\r\n        />\r\n        <mesh\r\n          material={materials.Default_White}\r\n          geometry={nodes.Book_02_1.geometry}\r\n        />\r\n        <mesh\r\n          material={materials.Default_Color}\r\n          geometry={nodes.Book_01_1.geometry}\r\n        />\r\n        <mesh\r\n          material={materials.Default_White}\r\n          geometry={nodes.Book_01_2.geometry}\r\n        />\r\n      </group>\r\n      <group visible={label}>\r\n        <mesh\r\n          material={materials.Default_Color}\r\n          geometry={nodes.Books_Label_1.geometry}\r\n        />\r\n        <mesh\r\n          material={materials.Default_White}\r\n          geometry={nodes.Books_Label_2.geometry}\r\n        />\r\n        <mesh\r\n          material={materials.Default_Color}\r\n          geometry={nodes.Books_Text.geometry}\r\n          position={[-0.79, 0.71, -0.59]}\r\n          rotation={[Math.PI / 2, 0, -Math.PI / 2]}\r\n        >\r\n          <mesh\r\n            material={materials.Default_Color}\r\n            geometry={nodes.Books_CTV.geometry}\r\n            position={[0.01, 0, 0.04]}\r\n          />\r\n        </mesh>\r\n      </group>\r\n    </a.group>\r\n  )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/profile.97795e7f.jpg\";","import React, { useEffect, useState } from 'react'\r\n\r\nimport { useSpring } from '@react-spring/core'\r\nimport { a } from '@react-spring/three'\r\n\r\nimport Profile from '../static/profile.jpg'\r\n\r\nconst defaultConfig = {\r\n  mass: 5,\r\n  tension: 400,\r\n  friction: 150,\r\n  precision: 0.0001,\r\n}\r\n\r\nexport function Glasses({ materials, nodes, setItems }) {\r\n  const [label, setLabel] = useState(false)\r\n  const [active, setActive] = useState(false)\r\n\r\n  const sProps = useSpring({\r\n    pos: active ? [0, 0, 0] : [0, 1, 0],\r\n    config: defaultConfig,\r\n  })\r\n\r\n  const ani = useSpring({\r\n    pos: label ? [0, 0.01, 0] : [0, 0, 0],\r\n    config: {\r\n      mass: 0.1,\r\n      tension: 50,\r\n      friction: 10,\r\n      precision: 0.0001,\r\n    },\r\n  })\r\n\r\n  const Overlay = (\r\n    <div>\r\n      <h1 className=\"title\">About</h1>\r\n      <div className=\"split\">\r\n        <div className=\"left\">\r\n          <p>Hey! I'm Trevor Smith. </p>\r\n          <p>\r\n            I am currently a senior at Weber State University pursuing a\r\n            bachelor's degree in Computer Science.\r\n          </p>\r\n          <p>\r\n            I am also a front-end software developer working for The Energy &\r\n            Geoscience Institute at The University of Utah\r\n          </p>\r\n        </div>\r\n        <div className=\"right\">\r\n          <img src={Profile} alt=\"Profile Picture\" className=\"profile-pic\" />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      setActive(true)\r\n    }, 100)\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    document.body.style.cursor = label ? 'pointer' : 'auto'\r\n  }, [label])\r\n\r\n  return (\r\n    <a.group position={sProps.pos}>\r\n      <mesh\r\n        visible={false}\r\n        material={materials.Material}\r\n        geometry={nodes.Glasses_HitBox.geometry}\r\n        onPointerEnter={() => {\r\n          setLabel(true)\r\n        }}\r\n        onPointerLeave={() => {\r\n          setLabel(false)\r\n        }}\r\n        onClick={() => {\r\n          setItems(Overlay)\r\n        }}\r\n      />\r\n      <a.group position={ani.pos}>\r\n        <mesh\r\n          material={materials.Default_White}\r\n          geometry={nodes.Glasses_1.geometry}\r\n        />\r\n        <mesh\r\n          material={materials.Default_Color}\r\n          geometry={nodes.Glasses_2.geometry}\r\n        />\r\n      </a.group>\r\n      <group visible={label}>\r\n        <mesh\r\n          material={materials.Default_Color}\r\n          geometry={nodes.Glasses_Label_1.geometry}\r\n        />\r\n        <mesh\r\n          material={materials.Default_White}\r\n          geometry={nodes.Glasses_Label_2.geometry}\r\n        />\r\n        <mesh\r\n          material={materials.Default_Color}\r\n          geometry={nodes.Glasses_Text.geometry}\r\n          position={[-0.72, 0.69, -0.43]}\r\n          rotation={[Math.PI / 2, 0, -Math.PI / 2]}\r\n        >\r\n          <mesh\r\n            material={materials.Default_Color}\r\n            geometry={nodes.Glasses_CTV.geometry}\r\n            position={[-0.01, 0, 0.04]}\r\n          />\r\n        </mesh>\r\n      </group>\r\n    </a.group>\r\n  )\r\n}\r\n","import React, { useRef } from 'react'\nimport { useGLTF } from '@react-three/drei/useGLTF'\nimport { TextHeaders } from './models/Text'\nimport { Room, Rug, Desk } from './models/Static'\nimport { Chair } from './models/Chair'\nimport { Lamp } from './models/Lamp'\nimport { Clock } from './models/Clock'\nimport { Blinds } from './models/Blinds'\nimport { Computer } from './models/Computer'\nimport { Garbage } from './models/Garbage'\nimport { WallArt } from './models/WallArt'\n// import { Soda } from './models/Soda'\nimport { Books } from './models/Books'\nimport { Glasses } from './models/Glasses'\n\nexport default function Models({ setItems }) {\n  const group = useRef()\n  const { nodes, materials } = useGLTF('/portfolio/models/iso-poly.gltf')\n\n  return (\n    <group\n      ref={group}\n      dispose={null}\n      position={[0, -0.76, 0]}\n      rotation={[0, -0.8, 0]}\n    >\n      <TextHeaders nodes={nodes} materials={materials} />\n      <Room nodes={nodes} materials={materials} />\n      <Rug nodes={nodes} materials={materials} />\n      <Desk nodes={nodes} materials={materials} />\n      <Chair nodes={nodes} materials={materials} setItems={setItems} />\n      <Lamp nodes={nodes} materials={materials} setItems={setItems} />\n      <Clock nodes={nodes} materials={materials} setItems={setItems} />\n      <Blinds nodes={nodes} materials={materials} setItems={setItems} />\n      <Computer nodes={nodes} materials={materials} setItems={setItems} />\n      <Garbage nodes={nodes} materials={materials} setItems={setItems} />\n      <WallArt nodes={nodes} materials={materials} setItems={setItems} />\n      {/* <Soda nodes={nodes} materials={materials} setItems={setItems} /> */}\n      <Books nodes={nodes} materials={materials} setItems={setItems} />\n      <Glasses nodes={nodes} materials={materials} setItems={setItems} />\n    </group>\n  )\n}\n\nuseGLTF.preload('/portfolio/models/iso-poly.gltf')\n","import React, { Suspense, useEffect, useRef, useState } from 'react'\r\nimport { EffectComposer, Noise } from 'react-postprocessing'\r\nimport { Stats, useDetectGPU } from '@react-three/drei'\r\nimport { Canvas } from 'react-three-fiber'\r\nimport { Loader } from './components/Loader'\r\nimport { CustomCamera } from './components/Camera'\r\nimport { Overlay } from './components/Overlay'\r\nimport Models from './Models'\r\n\r\nimport './App.css'\r\n\r\nexport default function App() {\r\n  const [overlayOpen, setOverlayOpen] = useState(false)\r\n  const overlayItems = useRef([])\r\n\r\n  const GPUTier = useDetectGPU()\r\n\r\n  const setItems = (items) => {\r\n    overlayItems.current = items\r\n    setOverlayOpen(true)\r\n  }\r\n\r\n  return (\r\n    <>\r\n    {console.log(GPUTier)}\r\n      <Canvas\r\n        pixelRatio={window.devicePixelRatio}\r\n        camera={{ position: [0, 2, 4] }}\r\n      >\r\n        {/* <Stats /> */}\r\n        <ambientLight intensity={0.9} />\r\n        <directionalLight intensity={0.5} />\r\n        <Suspense fallback={<Loader />}>\r\n          <Models setItems={setItems} />\r\n        </Suspense>\r\n        {GPUTier ? (\r\n          GPUTier.tier > 2 ? (\r\n            <EffectComposer>\r\n              <Noise opacity={0.01} />\r\n            </EffectComposer>\r\n          ) : null\r\n        ) : null}\r\n        <CustomCamera />\r\n      </Canvas>\r\n      )\r\n      <Overlay overlayOpen={overlayOpen} setOverlayOpen={setOverlayOpen}>\r\n        {overlayItems.current}\r\n      </Overlay>\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\n\r\nimport App from './App'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))\r\n"],"sourceRoot":""}