{"version":3,"sources":["lighting/Lighting.js","terrain/Terrain.js","object/Box.js","stats/Stats.js","App.js","index.js"],"names":["Lighting","props","attach","args","Sky","distance","sunPosition","inclination","azimuth","intensity","castShadow","position","shadow-mapSize-width","shadow-mapSize-height","shadow-camera-far","shadow-camera-left","shadow-camera-right","shadow-camera-top","shadow-camera-bottom","Terrain","useRef","useEffect","rotation","Math","PI","receiveShadow","transparent","opacity","Box","ref","useState","hovered","setHovered","active","setActive","useSpring","scale","color","useFrame","current","x","z","mesh","onPointerOver","onPointerOut","onClick","meshStandardMaterial","roughness","metalness","Stats","showPanel","className","parent","StatsImpl","stats","node","document","body","appendChild","dom","classList","add","begin","addEffect","end","addAfterEffect","removeChild","App","shadowMap","gl","alpha","camera","fov","OrbitControls","softShadows","ReactDOM","render","getElementById"],"mappings":"0NAGaA,EAAW,SAAAC,GACtB,OACE,oCACE,yBAAKC,OAAO,MAAMC,KAAM,CAAC,QAAS,EAAG,MACrC,kBAACC,EAAA,EAAD,CACEC,SAAU,KACVC,YAAa,CAAC,IAAK,EAAG,GACtBC,YAAa,EACbC,QAAS,MAEX,kCAAcC,UAAW,KACzB,sCACEC,YAAU,EACVC,SAAU,CAAC,IAAK,EAAG,GACnBF,UAAW,IACXG,uBAAsB,KACtBC,wBAAuB,KACvBC,oBAAmB,GACnBC,sBAAqB,GACrBC,sBAAqB,GACrBC,oBAAmB,GACnBC,wBAAuB,KAEzB,gCAAYP,SAAU,CAAC,GAAI,GAAI,GAAIF,UAAW,QCvBvCU,G,KAAU,WACTC,mBAEZ,OADAC,qBAAU,cAAU,IAElB,oCACE,0BACEC,SAAU,EAAEC,KAAKC,GAAK,EAAG,EAAG,GAC5Bb,SAAU,CAAC,GAAI,GAAK,GACpBc,eAAa,GAEb,yCAAqBvB,OAAO,WAAWC,KAAM,CAAC,IAAK,OACnD,oCAAgBD,OAAO,WAAWwB,aAAW,EAACC,QAAS,S,eCVlDC,EAAM,WACjB,IAAMC,EAAMT,mBADW,EAEOU,oBAAS,GAFhB,mBAEhBC,EAFgB,KAEPC,EAFO,OAGKF,oBAAS,GAHd,mBAGhBG,EAHgB,KAGRC,EAHQ,KAKjBjC,EAAQkC,YAAU,CACtBC,MAAOH,EAAS,CAAC,IAAK,IAAK,KAAO,CAAC,EAAG,EAAG,GACzCI,MAAON,EAAU,OAAS,cAQ5B,OALAO,aAAS,WACPT,EAAIU,QAAQjB,SAASkB,GAAK,KAC1BX,EAAIU,QAAQjB,SAASmB,GAAK,QAI1B,kBAAC,IAAEC,KAAH,CACEb,IAAKA,EACLlB,SAAU,CAAC,EAAG,EAAG,GACjBW,SAAU,CAAC,EAAG,EAAG,GACjBc,MAAOnC,EAAMmC,MACbO,cAAe,kBAAMX,GAAW,IAChCY,aAAc,kBAAMZ,GAAW,IAC/Ba,QAAS,kBAAMX,GAAWD,IAC1BvB,YAAU,EACVe,eAAa,GAEb,uCAAmBvB,OAAO,WAAWC,KAAM,CAAC,EAAG,EAAG,KAClD,kBAAC,IAAE2C,qBAAH,CACE5C,OAAO,WACP6C,UAAW,EACXC,UAAW,GACXX,MAAOpC,EAAMoC,U,iBC/Bd,SAASY,EAAT,GAAsD,IAAD,IAApCC,iBAAoC,MAAxB,EAAwB,EAArBC,EAAqB,EAArBA,UAAWC,EAAU,EAAVA,OAAU,EAC1CtB,oBAAS,kBAAM,IAAIuB,OAA5BC,EADmD,oBAmB1D,OAjBAjC,qBAAU,WACR,IAAMkC,EAAQH,GAAUA,EAAOb,SAAYiB,SAASC,KAEpDH,EAAMJ,UAAUA,GAChBK,EAAKG,YAAYJ,EAAMK,KAEnBR,GAAWG,EAAMK,IAAIC,UAAUC,IAAIV,GAEvC,IAAMW,EAAQC,aAAU,kBAAMT,EAAMQ,WAC9BE,EAAMC,aAAe,kBAAMX,EAAMU,SAEvC,OAAO,WACLT,EAAKW,YAAYZ,EAAMK,KACvBG,IACAE,OAED,CAACZ,IACG,K,MCVM,SAASe,IACtB,OACE,kBAAC,IAAD,CACEC,WAAS,EACTC,GAAI,CAAEC,OAAO,GACbC,OAAQ,CAAE5D,SAAU,EAAE,EAAG,EAAG,IAAK6D,IAAK,KAEtC,kBAACvB,EAAD,MACA,kBAACwB,EAAA,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,OAbNC,cCPAC,IAASC,OAAO,kBAAC,EAAD,MAASpB,SAASqB,eAAe,W","file":"static/js/main.0ba97390.chunk.js","sourcesContent":["import React, { useRef } from 'react'\r\nimport { Sky } from '@react-three/drei'\r\n\r\nexport const Lighting = props => {\r\n  return (\r\n    <>\r\n      <fog attach=\"fog\" args={['white', 0, 40]} />\r\n      <Sky\r\n        distance={450000}\r\n        sunPosition={[2.5, 8, 5]}\r\n        inclination={0}\r\n        azimuth={0.25}\r\n      />\r\n      <ambientLight intensity={0.4} />\r\n      <directionalLight\r\n        castShadow\r\n        position={[2.5, 8, 5]}\r\n        intensity={1.5}\r\n        shadow-mapSize-width={1024}\r\n        shadow-mapSize-height={1024}\r\n        shadow-camera-far={50}\r\n        shadow-camera-left={-10}\r\n        shadow-camera-right={10}\r\n        shadow-camera-top={10}\r\n        shadow-camera-bottom={-10}\r\n      />\r\n      <pointLight position={[0, -10, 0]} intensity={1.5} />\r\n    </>\r\n  )\r\n}\r\n","import React, { useEffect, useRef } from 'react'\r\nimport * as THREE from 'three'\r\n\r\nexport const Terrain = () => {\r\n  const ref = useRef()\r\n  useEffect(() => {}, [])\r\n  return (\r\n    <>\r\n      <mesh\r\n        rotation={[-Math.PI / 2, 0, 0]}\r\n        position={[0, -0.5, 0]}\r\n        receiveShadow\r\n      >\r\n        <planeBufferGeometry attach=\"geometry\" args={[100, 100]} />\r\n        <shadowMaterial attach=\"material\" transparent opacity={0.4} />\r\n      </mesh>\r\n    </>\r\n  )\r\n}\r\n","import React, { useRef, useState } from 'react'\r\nimport { useSpring, a } from 'react-spring/three'\r\nimport { useFrame } from 'react-three-fiber'\r\n\r\nexport const Box = () => {\r\n  const ref = useRef()\r\n  const [hovered, setHovered] = useState(false)\r\n  const [active, setActive] = useState(false)\r\n\r\n  const props = useSpring({\r\n    scale: active ? [1.5, 1.5, 1.5] : [1, 1, 1],\r\n    color: hovered ? 'pink' : 'lightblue',\r\n  })\r\n\r\n  useFrame(() => {\r\n    ref.current.rotation.x += 0.005\r\n    ref.current.rotation.z += 0.005\r\n  })\r\n\r\n  return (\r\n    <a.mesh\r\n      ref={ref}\r\n      position={[0, 2, 0]}\r\n      rotation={[0, 0, 0]}\r\n      scale={props.scale}\r\n      onPointerOver={() => setHovered(true)}\r\n      onPointerOut={() => setHovered(false)}\r\n      onClick={() => setActive(!active)}\r\n      castShadow\r\n      receiveShadow\r\n    >\r\n      <boxBufferGeometry attach=\"geometry\" args={[1, 1, 1]} />\r\n      <a.meshStandardMaterial\r\n        attach=\"material\"\r\n        roughness={0}\r\n        metalness={0.1}\r\n        color={props.color}\r\n      />\r\n    </a.mesh>\r\n  )\r\n}\r\n","import { useState, useEffect } from 'react'\r\nimport { addEffect, addAfterEffect } from 'react-three-fiber'\r\n// @ts-ignore\r\nimport StatsImpl from 'stats.js'\r\n\r\nexport function Stats({ showPanel = 0, className, parent }) {\r\n  const [stats] = useState(() => new StatsImpl())\r\n  useEffect(() => {\r\n    const node = (parent && parent.current) || document.body\r\n\r\n    stats.showPanel(showPanel)\r\n    node.appendChild(stats.dom)\r\n\r\n    if (className) stats.dom.classList.add(className)\r\n\r\n    const begin = addEffect(() => stats.begin())\r\n    const end = addAfterEffect(() => stats.end())\r\n\r\n    return () => {\r\n      node.removeChild(stats.dom)\r\n      begin()\r\n      end()\r\n    }\r\n  }, [parent])\r\n  return null\r\n}\r\n","import React from 'react'\r\n\r\nimport { Canvas } from 'react-three-fiber'\r\nimport { OrbitControls, softShadows } from '@react-three/drei'\r\n\r\nimport { Lighting } from './lighting/Lighting'\r\nimport { Terrain } from './terrain/Terrain'\r\nimport { Box } from './object/Box.js'\r\nimport { Stats } from './stats/Stats'\r\n\r\nimport './App.css'\r\n\r\nsoftShadows()\r\n\r\nexport default function App() {\r\n  return (\r\n    <Canvas\r\n      shadowMap\r\n      gl={{ alpha: false }}\r\n      camera={{ position: [-5, 2, 10], fov: 60 }}\r\n    >\r\n      <Stats />\r\n      <OrbitControls />\r\n      <Lighting />\r\n      <Box />\r\n      <Terrain />\r\n    </Canvas>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\n\r\nimport App from './App'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))\r\n"],"sourceRoot":""}