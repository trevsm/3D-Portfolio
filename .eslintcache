[{"C:\\Users\\Dev\\Desktop\\portfolio\\src\\index.js":"1","C:\\Users\\Dev\\Desktop\\portfolio\\src\\App.js":"2","C:\\Users\\Dev\\Desktop\\portfolio\\src\\models\\Text.js":"3","C:\\Users\\Dev\\Desktop\\portfolio\\src\\models\\Static.js":"4","C:\\Users\\Dev\\Desktop\\portfolio\\src\\models\\Lamp.js":"5","C:\\Users\\Dev\\Desktop\\portfolio\\src\\models\\Chair.js":"6","C:\\Users\\Dev\\Desktop\\portfolio\\src\\models\\Clock.js":"7","C:\\Users\\Dev\\Desktop\\portfolio\\src\\models\\Blinds.js":"8","C:\\Users\\Dev\\Desktop\\portfolio\\src\\models\\Computer.js":"9","C:\\Users\\Dev\\Desktop\\portfolio\\src\\models\\Garbage.js":"10","C:\\Users\\Dev\\Desktop\\portfolio\\src\\models\\WallArt.js":"11","C:\\Users\\Dev\\Desktop\\portfolio\\src\\models\\Soda.js":"12","C:\\Users\\Dev\\Desktop\\portfolio\\src\\models\\Books.js":"13","C:\\Users\\Dev\\Desktop\\portfolio\\src\\models\\Glasses.js":"14","C:\\Users\\Dev\\Desktop\\portfolio\\src\\Models.js":"15","C:\\Users\\Dev\\Desktop\\portfolio\\src\\models\\custom\\Strings.js":"16","C:\\Users\\Dev\\Desktop\\portfolio\\src\\components\\Loader.js":"17","C:\\Users\\Dev\\Desktop\\portfolio\\src\\components\\Camera.js":"18","C:\\Users\\Dev\\Desktop\\portfolio\\src\\components\\Overlay.js":"19"},{"size":149,"mtime":1611956735627,"results":"20","hashOfConfig":"21"},{"size":1465,"mtime":1613016604130,"results":"22","hashOfConfig":"21"},{"size":1986,"mtime":1612827770079,"results":"23","hashOfConfig":"21"},{"size":995,"mtime":1612829448052,"results":"24","hashOfConfig":"21"},{"size":3845,"mtime":1612999783910,"results":"25","hashOfConfig":"21"},{"size":2313,"mtime":1613011875846,"results":"26","hashOfConfig":"21"},{"size":2200,"mtime":1612999884180,"results":"27","hashOfConfig":"21"},{"size":3423,"mtime":1613001570220,"results":"28","hashOfConfig":"21"},{"size":4613,"mtime":1612989955328,"results":"29","hashOfConfig":"21"},{"size":2139,"mtime":1613003649887,"results":"30","hashOfConfig":"21"},{"size":7079,"mtime":1612999721410,"results":"31","hashOfConfig":"21"},{"size":3047,"mtime":1613002884762,"results":"32","hashOfConfig":"33"},{"size":2242,"mtime":1613016737231,"results":"34","hashOfConfig":"21"},{"size":3031,"mtime":1613017997727,"results":"35","hashOfConfig":"21"},{"size":1886,"mtime":1613010448984,"results":"36","hashOfConfig":"21"},{"size":2674,"mtime":1612834437067,"results":"37","hashOfConfig":"33"},{"size":206,"mtime":1612988683247,"results":"38","hashOfConfig":"21"},{"size":350,"mtime":1612988794518,"results":"39","hashOfConfig":"21"},{"size":450,"mtime":1612988928622,"results":"40","hashOfConfig":"21"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},"1mb07wr",{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"43"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"43"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"43"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"43"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1e4bt27",{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"43"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"43"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},"C:\\Users\\Dev\\Desktop\\portfolio\\src\\index.js",[],["88","89"],"C:\\Users\\Dev\\Desktop\\portfolio\\src\\App.js",["90","91"],"import React, { Suspense, useEffect, useRef, useState } from 'react'\r\nimport { EffectComposer, Noise } from 'react-postprocessing'\r\nimport { Stats, useDetectGPU } from '@react-three/drei'\r\nimport { Canvas } from 'react-three-fiber'\r\nimport { Loader } from './components/Loader'\r\nimport { CustomCamera } from './components/Camera'\r\nimport { Overlay } from './components/Overlay'\r\nimport Models from './Models'\r\n\r\nimport './App.css'\r\n\r\nexport default function App() {\r\n  const [overlayOpen, setOverlayOpen] = useState(false)\r\n  const overlayItems = useRef([])\r\n\r\n  const GPUTier = useDetectGPU()\r\n\r\n  const setItems = (items) => {\r\n    overlayItems.current = items\r\n    setOverlayOpen(true)\r\n  }\r\n\r\n  return (\r\n    <>\r\n    {console.log(GPUTier)}\r\n      <Canvas\r\n        pixelRatio={window.devicePixelRatio}\r\n        camera={{ position: [0, 2, 4] }}\r\n      >\r\n        {/* <Stats /> */}\r\n        <ambientLight intensity={0.9} />\r\n        <directionalLight intensity={0.5} />\r\n        <Suspense fallback={<Loader />}>\r\n          <Models setItems={setItems} />\r\n        </Suspense>\r\n        {GPUTier ? (\r\n          GPUTier.tier > 2 ? (\r\n            <EffectComposer>\r\n              <Noise opacity={0.01} />\r\n            </EffectComposer>\r\n          ) : null\r\n        ) : null}\r\n        <CustomCamera />\r\n      </Canvas>\r\n      )\r\n      <Overlay overlayOpen={overlayOpen} setOverlayOpen={setOverlayOpen}>\r\n        {overlayItems.current}\r\n      </Overlay>\r\n    </>\r\n  )\r\n}\r\n","C:\\Users\\Dev\\Desktop\\portfolio\\src\\models\\Text.js",[],"C:\\Users\\Dev\\Desktop\\portfolio\\src\\models\\Static.js",[],"C:\\Users\\Dev\\Desktop\\portfolio\\src\\models\\Lamp.js",["92"],"import React, { useEffect, useState } from 'react'\r\n\r\nimport { useSpring } from '@react-spring/core'\r\nimport { a } from '@react-spring/three'\r\n\r\nconst defaultConfig = {\r\n  mass: 5,\r\n  tension: 400,\r\n  friction: 150,\r\n  precision: 0.0001,\r\n}\r\n\r\nfunction OverlayContent() {\r\n  return (\r\n    <>\r\n      <h1 className=\"title\">Skills/Languages</h1>\r\n      <div className=\"tile-grid horizontal\">\r\n        <div className=\"tile short\">\r\n          <div className=\"tile-content\">\r\n            Frontend <br />\r\n            <span className=\"description\">\r\n              HTML, CSS, JS, React.js, Three.js\r\n            </span>\r\n          </div>\r\n        </div>\r\n        <div className=\"tile short\">\r\n          <div className=\"tile-content\">\r\n            Backend <br />\r\n            <span className=\"description\">Node.js, C++, PHP, Java</span>\r\n          </div>\r\n        </div>\r\n        <div className=\"tile short\">\r\n          <div className=\"tile-content\">\r\n            Functional\r\n            <br />\r\n            <span className=\"description\">\r\n              Git, NPM, Linux, Bash, OracleSQL, MongoDB\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport function Lamp({ materials, nodes, setItems }) {\r\n  const [label, setLabel] = useState(false)\r\n  const [active, setActive] = useState(false)\r\n\r\n  const sProps = useSpring({\r\n    pos: active ? [0, 0, 0] : [0, 1, 0],\r\n    rot: active ? [0, 0, 0] : [0, Math.PI, 0],\r\n    config: defaultConfig,\r\n  })\r\n\r\n  const ani = useSpring({\r\n    rot: label ? [0.2, 0, 0] : [0, 0, 0],\r\n    config: {\r\n      mass: 0.1,\r\n      tension: 50,\r\n      friction: 10,\r\n      precision: 0.0001,\r\n    },\r\n  })\r\n\r\n  const Overlay = (\r\n    <div>\r\n      <h1 className=\"title\">Skills</h1>\r\n    </div>\r\n  )\r\n\r\n  useEffect(() => {\r\n    setActive(true)\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    document.body.style.cursor = label ? 'pointer' : 'auto'\r\n  }, [label])\r\n\r\n  return (\r\n    <a.group position={sProps.pos}>\r\n      <a.group\r\n        onPointerEnter={() => {\r\n          setLabel(true)\r\n        }}\r\n        onPointerLeave={() => {\r\n          setLabel(false)\r\n        }}\r\n        onClick={() => {\r\n          setItems(<OverlayContent />)\r\n        }}\r\n        position={[-0.71, 0.66, 0.22]}\r\n        rotation={sProps.rot}\r\n      >\r\n        <mesh\r\n          material={materials.Default_Color}\r\n          geometry={nodes.Body_1.geometry}\r\n        />\r\n        <mesh\r\n          material={materials.Default_White}\r\n          geometry={nodes.Body_2.geometry}\r\n        />\r\n        <mesh\r\n          visible={false}\r\n          material={materials.Material}\r\n          geometry={nodes.Lamp_HitBox.geometry}\r\n          position={[0.71, -0.66, -0.22]}\r\n        />\r\n        <a.group position={[0, 0.06, 0.03]} rotation={ani.rot}>\r\n          <mesh\r\n            material={materials.Default_Color}\r\n            geometry={nodes.Hood_1.geometry}\r\n          />\r\n          <mesh\r\n            material={materials.Default_White}\r\n            geometry={nodes.Hood_2.geometry}\r\n          />\r\n        </a.group>\r\n        <group position={[0.71, -0.66, -0.22]} visible={label}>\r\n          <mesh\r\n            material={materials.Default_Color}\r\n            geometry={nodes.Lamp_Label_1.geometry}\r\n          />\r\n          <mesh\r\n            material={materials.Default_White}\r\n            geometry={nodes.Lamp_Label_2.geometry}\r\n          />\r\n          <mesh\r\n            material={materials.Default_Color}\r\n            geometry={nodes.Lamp_Text.geometry}\r\n            position={[-0.68, 0.88, 0.09]}\r\n            rotation={[Math.PI / 2, 0, -Math.PI / 2]}\r\n          >\r\n            <mesh\r\n              material={materials.Default_Color}\r\n              geometry={nodes.Lamp_CTV.geometry}\r\n              position={[-0.02, 0, 0.03]}\r\n            />\r\n          </mesh>\r\n        </group>\r\n      </a.group>\r\n    </a.group>\r\n  )\r\n}\r\n","C:\\Users\\Dev\\Desktop\\portfolio\\src\\models\\Chair.js",["93"],"import React, { useEffect, useState } from 'react'\r\n\r\nimport { useSpring } from '@react-spring/core'\r\nimport { a } from '@react-spring/three'\r\n\r\nconst defaultConfig = {\r\n  mass: 5,\r\n  tension: 400,\r\n  friction: 150,\r\n  precision: 0.0001,\r\n}\r\n\r\nexport function Chair({ materials, nodes, setItems }) {\r\n  const [label, setLabel] = useState(false)\r\n  const [active, setActive] = useState(false)\r\n\r\n  const sProps = useSpring({\r\n    pos: active ? [0, 0, 0] : [1, 0, 0],\r\n    config: defaultConfig,\r\n  })\r\n\r\n  const ani = useSpring({\r\n    rot: label ? [0, 0.1, 0] : [0, 0, 0],\r\n    config: {\r\n      mass: 0.1,\r\n      tension: 50,\r\n      friction: 10,\r\n      precision: 0.0001,\r\n    },\r\n  })\r\n\r\n  const Overlay = (\r\n    <div>\r\n      <h1 className=\"title\">Chair</h1>\r\n    </div>\r\n  )\r\n\r\n  useEffect(() => {\r\n    setActive(true)\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    // document.body.style.cursor = label ? 'pointer' : 'auto'\r\n  }, [label])\r\n\r\n  return (\r\n    <a.group position={sProps.pos}>\r\n      <a.group\r\n        onPointerEnter={() => {\r\n          setLabel(true)\r\n        }}\r\n        onPointerLeave={() => {\r\n          setLabel(false)\r\n        }}\r\n        onClick={() => {\r\n          // setItems(Overlay)\r\n        }}\r\n        rotation={ani.rot}\r\n        position={[-0.19, 0.42, -0.14]}\r\n      >\r\n        <group>\r\n          <mesh\r\n            material={materials.Default_Color}\r\n            geometry={nodes.Chair_1.geometry}\r\n          />\r\n          <mesh\r\n            material={materials.Default_White}\r\n            geometry={nodes.Chair_2.geometry}\r\n          />\r\n        </group>\r\n      </a.group>\r\n      <group visible={false}>\r\n        <mesh\r\n          material={materials.Default_Color}\r\n          geometry={nodes.Chair_Label_1.geometry}\r\n        />\r\n        <mesh\r\n          material={materials.Default_White}\r\n          geometry={nodes.Chair_Label_2.geometry}\r\n        />\r\n        <mesh\r\n          material={materials.Default_Color}\r\n          geometry={nodes.Chair_Text.geometry}\r\n          position={[-0.06, 0.83, 0.14]}\r\n          rotation={[Math.PI / 2, 0, -Math.PI / 2]}\r\n        >\r\n          <mesh\r\n            material={materials.Default_Color}\r\n            geometry={nodes.Chair_CTV.geometry}\r\n            position={[0, 0, 0.04]}\r\n          />\r\n        </mesh>\r\n      </group>\r\n    </a.group>\r\n  )\r\n}\r\n","C:\\Users\\Dev\\Desktop\\portfolio\\src\\models\\Clock.js",["94","95"],"import React, { useEffect, useState, useRef } from 'react'\r\nimport { useFrame } from 'react-three-fiber'\r\n\r\nexport function Clock({ materials, nodes, setItems }) {\r\n  const [label, setLabel] = useState(false)\r\n  const hourHand = useRef()\r\n  const minHand = useRef()\r\n\r\n  useEffect(() => {\r\n    document.body.style.cursor = label ? 'pointer' : 'auto'\r\n  }, [label])\r\n\r\n  const Overlay = (\r\n    <div>\r\n      <h1 className=\"title\">Timeline</h1>\r\n    </div>\r\n  )\r\n\r\n  useFrame(() => {\r\n    minHand.current.rotation.z -= .002\r\n    hourHand.current.rotation.z = minHand.current.rotation.z / 10\r\n  })\r\n\r\n  return (\r\n    <group>\r\n      <group\r\n        onPointerEnter={() => {\r\n          // setLabel(true)\r\n        }}\r\n        onPointerLeave={() => {\r\n          // setLabel(false)\r\n        }}\r\n        onClick={() => {\r\n          // setItems(Overlay)\r\n        }}\r\n      >\r\n        <mesh\r\n          material={materials.Default_Color}\r\n          geometry={nodes.cbody.geometry}\r\n        />\r\n        <mesh\r\n          material={materials.Default_White}\r\n          geometry={nodes.cbody_1.geometry}\r\n        />\r\n        <mesh\r\n          ref={minHand}\r\n          material={materials.Default_Color}\r\n          geometry={nodes.Large_Hand.geometry}\r\n          position={[0.45, 1.12158, -0.9]}\r\n        />\r\n        <mesh\r\n          ref={hourHand}\r\n          material={materials.Default_Color}\r\n          geometry={nodes.Small_Hand.geometry}\r\n          position={[0.45, 1.12151, -0.9]}\r\n        />\r\n      </group>\r\n      <group visible={label}>\r\n        <mesh\r\n          material={materials.Default_Color}\r\n          geometry={nodes.Clock_Label_1.geometry}\r\n        />\r\n        <mesh\r\n          material={materials.Default_White}\r\n          geometry={nodes.Clock_Label_2.geometry}\r\n        />\r\n        <mesh\r\n          material={materials.Default_Color}\r\n          geometry={nodes.Clock_Text.geometry}\r\n          position={[0.56, 1.35, -0.9]}\r\n          rotation={[Math.PI / 2, 0, 0]}\r\n        >\r\n          <mesh\r\n            material={materials.Default_Color}\r\n            geometry={nodes.Clock_CTV.geometry}\r\n            position={[0.01, 0, 0.04]}\r\n          />\r\n        </mesh>\r\n      </group>\r\n    </group>\r\n  )\r\n}\r\n","C:\\Users\\Dev\\Desktop\\portfolio\\src\\models\\Blinds.js",[],"C:\\Users\\Dev\\Desktop\\portfolio\\src\\models\\Computer.js",[],"C:\\Users\\Dev\\Desktop\\portfolio\\src\\models\\Garbage.js",[],["96","97"],"C:\\Users\\Dev\\Desktop\\portfolio\\src\\models\\WallArt.js",[],"C:\\Users\\Dev\\Desktop\\portfolio\\src\\models\\Soda.js",["98"],"C:\\Users\\Dev\\Desktop\\portfolio\\src\\models\\Books.js",[],"C:\\Users\\Dev\\Desktop\\portfolio\\src\\models\\Glasses.js",["99"],"import React, { useEffect, useState } from 'react'\r\n\r\nimport { useSpring } from '@react-spring/core'\r\nimport { a } from '@react-spring/three'\r\n\r\nimport Profile from '../static/profile.jpg'\r\n\r\nconst defaultConfig = {\r\n  mass: 5,\r\n  tension: 400,\r\n  friction: 150,\r\n  precision: 0.0001,\r\n}\r\n\r\nexport function Glasses({ materials, nodes, setItems }) {\r\n  const [label, setLabel] = useState(false)\r\n  const [active, setActive] = useState(false)\r\n\r\n  const sProps = useSpring({\r\n    pos: active ? [0, 0, 0] : [0, 1, 0],\r\n    config: defaultConfig,\r\n  })\r\n\r\n  const ani = useSpring({\r\n    pos: label ? [0, 0.01, 0] : [0, 0, 0],\r\n    config: {\r\n      mass: 0.1,\r\n      tension: 50,\r\n      friction: 10,\r\n      precision: 0.0001,\r\n    },\r\n  })\r\n\r\n  const Overlay = (\r\n    <div>\r\n      <h1 className=\"title\">About</h1>\r\n      <div className=\"split\">\r\n        <div className=\"left\">\r\n          <p>Hey! I'm Trevor Smith. </p>\r\n          <p>\r\n            I am currently a senior at Weber State University pursuing a\r\n            bachelor's degree in Computer Science.\r\n          </p>\r\n          <p>\r\n            I am also a front-end software developer working for The Energy &\r\n            Geoscience Institute at The University of Utah\r\n          </p>\r\n        </div>\r\n        <div className=\"right\">\r\n          <img src={Profile} alt=\"Profile Picture\" className=\"profile-pic\" />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      setActive(true)\r\n    }, 100)\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    document.body.style.cursor = label ? 'pointer' : 'auto'\r\n  }, [label])\r\n\r\n  return (\r\n    <a.group position={sProps.pos}>\r\n      <mesh\r\n        visible={false}\r\n        material={materials.Material}\r\n        geometry={nodes.Glasses_HitBox.geometry}\r\n        onPointerEnter={() => {\r\n          setLabel(true)\r\n        }}\r\n        onPointerLeave={() => {\r\n          setLabel(false)\r\n        }}\r\n        onClick={() => {\r\n          setItems(Overlay)\r\n        }}\r\n      />\r\n      <a.group position={ani.pos}>\r\n        <mesh\r\n          material={materials.Default_White}\r\n          geometry={nodes.Glasses_1.geometry}\r\n        />\r\n        <mesh\r\n          material={materials.Default_Color}\r\n          geometry={nodes.Glasses_2.geometry}\r\n        />\r\n      </a.group>\r\n      <group visible={label}>\r\n        <mesh\r\n          material={materials.Default_Color}\r\n          geometry={nodes.Glasses_Label_1.geometry}\r\n        />\r\n        <mesh\r\n          material={materials.Default_White}\r\n          geometry={nodes.Glasses_Label_2.geometry}\r\n        />\r\n        <mesh\r\n          material={materials.Default_Color}\r\n          geometry={nodes.Glasses_Text.geometry}\r\n          position={[-0.72, 0.69, -0.43]}\r\n          rotation={[Math.PI / 2, 0, -Math.PI / 2]}\r\n        >\r\n          <mesh\r\n            material={materials.Default_Color}\r\n            geometry={nodes.Glasses_CTV.geometry}\r\n            position={[-0.01, 0, 0.04]}\r\n          />\r\n        </mesh>\r\n      </group>\r\n    </a.group>\r\n  )\r\n}\r\n","C:\\Users\\Dev\\Desktop\\portfolio\\src\\Models.js",[],"C:\\Users\\Dev\\Desktop\\portfolio\\src\\models\\custom\\Strings.js",[],["100","101"],"C:\\Users\\Dev\\Desktop\\portfolio\\src\\components\\Loader.js",[],"C:\\Users\\Dev\\Desktop\\portfolio\\src\\components\\Camera.js",["102"],"import { useEffect } from 'react'\r\nimport { useThree } from 'react-three-fiber'\r\n\r\nexport function CustomCamera() {\r\n  const { camera } = useThree()\r\n\r\n  const setDefaultView = () => {\r\n    camera.fov = 23\r\n    camera.lookAt(0, 0, 0)\r\n    camera.updateProjectionMatrix()\r\n  }\r\n\r\n  useEffect(() => {\r\n    setDefaultView()\r\n  }, [])\r\n  return null\r\n}\r\n","C:\\Users\\Dev\\Desktop\\portfolio\\src\\components\\Overlay.js",[],{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","severity":1,"message":"108","line":1,"column":27,"nodeType":"109","messageId":"110","endLine":1,"endColumn":36},{"ruleId":"107","severity":1,"message":"111","line":3,"column":10,"nodeType":"109","messageId":"110","endLine":3,"endColumn":15},{"ruleId":"107","severity":1,"message":"112","line":66,"column":9,"nodeType":"109","messageId":"110","endLine":66,"endColumn":16},{"ruleId":"107","severity":1,"message":"112","line":32,"column":9,"nodeType":"109","messageId":"110","endLine":32,"endColumn":16},{"ruleId":"107","severity":1,"message":"113","line":5,"column":17,"nodeType":"109","messageId":"110","endLine":5,"endColumn":25},{"ruleId":"107","severity":1,"message":"112","line":13,"column":9,"nodeType":"109","messageId":"110","endLine":13,"endColumn":16},{"ruleId":"103","replacedBy":"114"},{"ruleId":"105","replacedBy":"115"},{"ruleId":"107","severity":1,"message":"116","line":13,"column":10,"nodeType":"109","messageId":"110","endLine":13,"endColumn":24},{"ruleId":"117","severity":1,"message":"118","line":50,"column":11,"nodeType":"119","endLine":50,"endColumn":78},{"ruleId":"103","replacedBy":"120"},{"ruleId":"105","replacedBy":"121"},{"ruleId":"122","severity":1,"message":"123","line":15,"column":6,"nodeType":"124","endLine":15,"endColumn":8,"suggestions":"125"},"no-native-reassign",["126"],"no-negated-in-lhs",["127"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'Stats' is defined but never used.","'Overlay' is assigned a value but never used.","'setLabel' is assigned a value but never used.",["126"],["127"],"'OverlayContent' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement",["126"],["127"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setDefaultView'. Either include it or remove the dependency array.","ArrayExpression",["128"],"no-global-assign","no-unsafe-negation",{"desc":"129","fix":"130"},"Update the dependencies array to be: [setDefaultView]",{"range":"131","text":"132"},[327,329],"[setDefaultView]"]